{"version":3,"file":"baseui-wc-base-component.min.js","sources":["../src/helpers/index.js","../node_modules/baseui-wc-utils/src/helpers/index.js","../src/mixins/bootstrap-element/index.js","../node_modules/hyperhtml/esm/classes/Component.js","../node_modules/hyperhtml/esm/objects/Intent.js","../node_modules/hyperhtml/esm/shared/constants.js","../node_modules/hyperhtml/esm/shared/poorlyfills.js","../node_modules/hyperhtml/esm/shared/easy-dom.js","../node_modules/hyperhtml/esm/shared/features-detection.js","../node_modules/hyperhtml/esm/shared/utils.js","../node_modules/hyperhtml/esm/classes/Wire.js","../node_modules/hyperhtml/esm/objects/Path.js","../node_modules/hyperhtml/esm/objects/Style.js","../node_modules/hyperhtml/esm/shared/domdiff.js","../node_modules/hyperhtml/esm/objects/Updates.js","../node_modules/hyperhtml/esm/hyper/render.js","../node_modules/hyperhtml/esm/hyper/wire.js","../node_modules/hyperhtml/esm/index.js","../src/base-component/index.js","../src/base-component/with-hyperHTML/index.js","../node_modules/lit-html/lit-html.js","../node_modules/lit-html/lib/lit-extended.js","../src/base-component/with-litHTML/index.js","../node_modules/lodash-es/_freeGlobal.js","../node_modules/lodash-es/_root.js","../node_modules/lodash-es/_Symbol.js","../node_modules/lodash-es/_getRawTag.js","../node_modules/lodash-es/_objectToString.js","../node_modules/lodash-es/_baseGetTag.js","../node_modules/lodash-es/_getPrototype.js","../node_modules/lodash-es/_overArg.js","../node_modules/lodash-es/isPlainObject.js","../node_modules/lodash-es/isObjectLike.js","../node_modules/symbol-observable/lib/ponyfill.js","../node_modules/symbol-observable/lib/index.js","../node_modules/symbol-observable/index.js","../node_modules/redux/es/createStore.js","../node_modules/redux/es/utils/warning.js","../node_modules/redux/es/combineReducers.js","../node_modules/redux/es/bindActionCreators.js","../node_modules/redux/es/compose.js","../node_modules/redux/es/applyMiddleware.js","../node_modules/redux/es/index.js","../node_modules/redux-devtools-extension/index.js","../node_modules/baseui-wc-utils/src/dom/event-handlers/index.js","../src/page-store/index.js","../src/throw-error/index.js"],"sourcesContent":["/**\n * set context to allow CE polyfill work as expected\n */\nexport class HTMLCustomElement extends HTMLElement {\n    constructor(_) { return (_ = super(_)).init(), _; } // eslint-disable-line\n    init() { } // eslint-disable-line\n}\n\n/**\n * serialize attribute value from string to number/object/boolean/null or string\n * this also checks if the given attribute is a boolean attribute(named as `has-*`) without value, then returns as boolean\n * @param {string} attrName key/name of the attribute\n * @param {string} value of the attribute that needs to be serialize\n * @return {any} based on the type of the given value, it will be parsed and sent as that type\n */\nexport function serializeAttrValue(attrName, value) {\n    const isObjOrArray = (/^[{|[]/g).test(value);\n    const hasOrIsBooleanAttr = (/^has-|^is-/g).test(attrName);\n    let updatedValue;\n\n    // parse attributue value\n    try {\n        updatedValue = JSON.parse(value);\n    } catch (e) {\n        updatedValue = value;\n\n        if (isObjOrArray) {\n            updatedValue = null;\n            console.error(`Warning: Failed serializing attribute(${attrName}) value as JSON: ${value}`);\n        }\n    }\n\n    // check for has-* or is-* attributes\n    if (hasOrIsBooleanAttr) {\n        updatedValue = hasOrIsBooleanAttr;\n    }\n\n    return updatedValue;\n}\n","/**\n * Converts string camelcase to hyphennated\n * @param {string} word data that passed to the function\n * @return {string} word converted string\n */\nexport function toHyphenCase(word) {\n    return word.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts string hyphennated to camelcase\n * @param {string} word data that passed to the function\n * @return {string} word converted string\n */\nexport function toCamelCase(word) {\n    return word.replace(/\\b(_|-)([a-z])/g, (s, f, c) => c.toUpperCase());\n}\n\n/**\n * Convert attributes into properties\n * @param {object} obj attributes\n * @return {object} properties object\n */\nexport function createProps(obj) {\n    if (!obj) return false;\n\n    const props = {};\n\n    Object.keys(obj).forEach((key) => {\n        props[toCamelCase(obj[key].name)] = obj[key].value;\n    });\n\n    return props;\n}\n\n/**\n * check if boolean attributes ex: checked, disabled, etc. exist\n * @param {object} props element properties\n * @param {string} attr attribute name\n * @return {string} value to add\n */\nexport function setBooleanAttributeValue(props, attr) {\n    return ({}.hasOwnProperty.call(props, attr)) ? attr : '';\n}\n\n/**\n * Validate if date provided\n * @param {string} value date value\n * @return {boolean} response valid date or not\n */\nexport function isValidDate(value) {\n    return !Number.isNaN(Date.parse(value));\n}\n\n/**\n * Set attributes on the element if passed as object\n * @param {object} attrs attributes object, ex: checked, name, value, label, etc.\n * @param {object} field element, ex: input, radio, header-text, etc.\n */\nexport function addAttributes(attrs, field) {\n    if (!attrs || !field) return;\n\n    Object.keys(attrs).forEach((attr) => {\n        field.setAttribute(attr, attrs[attr]);\n    });\n}\n\nexport default {\n    toHyphenCase,\n    toCamelCase,\n    createProps,\n    setBooleanAttributeValue,\n    isValidDate,\n    addAttributes\n};\n","import { toCamelCase } from 'baseui-wc-utils/src/helpers';\nimport { serializeAttrValue } from '../../helpers/index.js';\n\n/**\n * This module create property instance and get/set for all attributes and observedAttributes\n */\nconst BootstrapElement = superclass => class extends superclass {\n    /**\n     * This is re-usable static method, which sets property on the instance prototype based on the given attribute name\n     * @param {string} name attribute name\n     */\n    defineProp(name) {\n        if (!name) return;\n\n        const classInstance = this;\n        const classProto    = Object.getPrototypeOf(classInstance);\n        const propName      = toCamelCase(name);\n\n        if (propName in classProto) return;\n\n        Object.defineProperty(classProto, propName, {\n            configurable: true,\n            get() {\n                return serializeAttrValue(name, this.getAttribute(name));\n            },\n            set(value) {\n                const checkedValue = (typeof value !== 'string') ? JSON.stringify(value) : value;\n                this.setAttribute(name, checkedValue);\n            }\n        });\n    }\n\n    /**\n     * This loops through all the given attributes, observedAttributes and send it to `defineProp()`\n     * @param {array} attributes list of attributes added to the component\n     * @param {array} observedAttributes list of observed attributes\n     */\n    createAttributesToProperties(attributes = {}, observedAttributes = []) {\n        // attributes to properties\n        Object.keys(attributes).forEach((attr) => {\n            const attrName = attributes[attr].name;\n            this.defineProp(attrName);\n        });\n\n        if (observedAttributes.length === 0) return;\n\n        // observedAttributes to properties\n        observedAttributes.forEach(this.defineProp.bind(this));\n    }\n\n    ObservePropertyChanges(observedProps = []) {\n        const classInstance = this;\n        const classProto = Object.getPrototypeOf(classInstance);\n\n        const setPropertyObserver = (prop) => {\n            if (prop in classProto) return;\n\n            Object.defineProperty(this, prop, {\n                configurable: true,\n                get() {\n                    return this[`_${prop}`];\n                },\n                set(value) {\n                    this[`_${prop}`] = value;\n\n                    // auto re-render when property value changed\n                    if (this.isFirstRender || typeof this._beforeRender !== 'function') return;\n                    this._beforeRender();\n                }\n            });\n        };\n\n        observedProps.forEach(setPropertyObserver);\n    }\n\n    /**\n     * has attribute\n     * @param {string} attribute name\n     */\n    has(attr) {\n        return this.hasAttribute(attr);\n    }\n\n    /**\n     * set attribute value\n     * @param {string} attribute name\n     */\n    get(attr) {\n        return this.getAttribute(attr);\n    }\n\n    /**\n     * set attribute value\n     * @param {string} attribute name\n     * @param {string} new/changed value for the attribute\n     */\n    set(attr, val) {\n        return this.setAttribute(attr, val);\n    }\n\n    /**\n     * remove attribute\n     * @param {string} attribute name\n     */\n    remove(attr) {\n        return this.removeAttribute(attr);\n    }\n};\n\nexport default BootstrapElement;\n","// hyperHTML.Component is a very basic class\n// able to create Custom Elements like components\n// including the ability to listen to connect/disconnect\n// events via onconnect/ondisconnect attributes\nexport default function Component() {}\n\n// components will lazily define html or svg properties\n// as soon as these are invoked within the .render() method\n// Such render() method is not provided by the base class\n// but it must be available through the Component extend.\nexport function setup(content) {\n  Object.defineProperties(\n    Component.prototype,\n    {\n      handleEvent: {value(e) {\n        const ct = e.currentTarget;\n        this[\n          ('getAttribute' in ct && ct.getAttribute('data-call')) ||\n          ('on' + e.type)\n        ](e);\n      }},\n      html: lazyGetter('html', content),\n      svg: lazyGetter('svg', content),\n      state: lazyGetter('state', function () { return this.defaultState; }),\n      defaultState: {get() { return {}; }},\n      setState: {value(state) {\n        const target = this.state;\n        const source = typeof state === 'function' ? state.call(this, target) : state;\n        for (const key in source) target[key] = source[key];\n        this.render();\n      }}\n    }\n  );\n}\n\n// instead of a secret key I could've used a WeakMap\n// However, attaching a property directly will result\n// into better performance with thousands of components\n// hanging around, and less memory pressure caused by the WeakMap\nconst lazyGetter = (type, fn) => {\n  const secret = '_' + type + '$';\n  return {\n    get() {\n      return this[secret] || (this[type] = fn.call(this, type));\n    },\n    set(value) {\n      Object.defineProperty(this, secret, {configurable: true, value});\n    }\n  };\n};\n","const intents = {};\nconst keys = [];\nconst hasOwnProperty = intents.hasOwnProperty;\n\nlet length = 0;\n\nexport default {\n\n  // hyperHTML.define('intent', (object, update) => {...})\n  // can be used to define a third parts update mechanism\n  // when every other known mechanism failed.\n  // hyper.define('user', info => info.name);\n  // hyper(node)`<p>${{user}}</p>`;\n  define: (intent, callback) => {\n    if (!(intent in intents)) {\n      length = keys.push(intent);\n    }\n    intents[intent] = callback;\n  },\n\n  // this method is used internally as last resort\n  // to retrieve a value out of an object\n  invoke: (object, callback) => {\n    for (let i = 0; i < length; i++) {\n      let key = keys[i];\n      if (hasOwnProperty.call(object, key)) {\n        return intents[key](object[key], callback);\n      }\n    }\n  }\n};\n","export const G = document.defaultView;\n\n// Node.CONSTANTS\n// 'cause some engine has no global Node defined\n// (i.e. Node, NativeScript, basicHTML ... )\nexport const ELEMENT_NODE = 1;\nexport const ATTRIBUTE_NODE = 2;\nexport const TEXT_NODE = 3;\nexport const COMMENT_NODE = 8;\nexport const DOCUMENT_FRAGMENT_NODE = 11;\n\n// SVG related constants\nexport const OWNER_SVG_ELEMENT = 'ownerSVGElement';\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n\n// Custom Elements / MutationObserver constants\nexport const CONNECTED = 'connected';\nexport const DISCONNECTED = 'dis' + CONNECTED;\n\n// hyperHTML related constants\nexport const EXPANDO = '_hyper: ';\nexport const SHOULD_USE_TEXT_CONTENT = /^style|textarea$/i;\nexport const UID = EXPANDO + ((Math.random() * new Date) | 0) + ';';\nexport const UIDC = '<!--' + UID + '-->';\n","import {G, UID} from './constants.js';\n\n// you know that kind of basics you need to cover\n// your use case only but you don't want to bloat the library?\n// There's even a package in here:\n// https://www.npmjs.com/package/poorlyfills\n\n// used to dispatch simple events\nlet Event = G.Event;\ntry {\n  new Event('Event');\n} catch(o_O) {\n  Event = function (type) {\n    const e = document.createEvent('Event');\n    e.initEvent(type, false, false);\n    return e;\n  };\n}\nexport {Event};\n\n// used to store template literals\nexport const Map = G.Map || function Map() {\n  const keys = [], values = [];\n  return {\n    get(obj) {\n      return values[keys.indexOf(obj)];\n    },\n    set(obj, value) {\n      values[keys.push(obj) - 1] = value;\n    }\n  };\n};\n\n// used to store wired content\nexport const WeakMap = G.WeakMap || function WeakMap() {\n  return {\n    get(obj) { return obj[UID]; },\n    set(obj, value) {\n      Object.defineProperty(obj, UID, {\n        configurable: true,\n        value\n      });\n    }\n  };\n};\n\n// used to store hyper.Components\nexport const WeakSet = G.WeakSet || function WeakSet() {\n  const wm = new WeakMap;\n  return {\n    add(obj) { wm.set(obj, true); },\n    has(obj) { return wm.get(obj) === true; }\n  };\n};\n\n// used to be sure IE9 or older Androids work as expected\nexport const isArray = Array.isArray || (toString =>\n  arr => toString.call(arr) === '[object Array]'\n)({}.toString);\n\nexport const trim = UID.trim || function () {\n  return this.replace(/^\\s+|\\s+$/g, '');\n};\n","// these are tiny helpers to simplify most common operations needed here\nexport const create = (node, type) => doc(node).createElement(type);\nexport const doc = node => node.ownerDocument || node;\nexport const fragment = node => doc(node).createDocumentFragment();\nexport const text = (node, text) => doc(node).createTextNode(text);\n","import {create, fragment, text} from './easy-dom.js';\n\nconst testFragment = fragment(document);\n\n// DOM4 node.append(...many)\nexport const hasAppend = 'append' in testFragment;\n\n// detect old browsers without HTMLTemplateElement content support\nexport const hasContent = 'content' in create(document, 'template');\n\n// IE 11 has problems with cloning templates: it \"forgets\" empty childNodes\ntestFragment.appendChild(text(testFragment, 'g'));\ntestFragment.appendChild(text(testFragment, ''));\nexport const hasDoomedCloneNode = testFragment.cloneNode(true).childNodes.length === 1;\n\n// old browsers need to fallback to cloneNode\n// Custom Elements V0 and V1 will work polyfilled\n// but native implementations need importNode instead\n// (specially Chromium and its old V0 implementation)\nexport const hasImportNode = 'importNode' in document;\n","import {\n  G,\n  OWNER_SVG_ELEMENT,\n  SVG_NAMESPACE,\n  UID,\n  UIDC\n} from './constants.js';\n\nimport {\n  hasAppend,\n  hasContent,\n  hasDoomedCloneNode,\n  hasImportNode\n} from './features-detection.js';\n\nimport {create, doc, fragment} from './easy-dom.js';\n\n// appends an array of nodes\n// to a generic node/fragment\n// When available, uses append passing all arguments at once\n// hoping that's somehow faster, even if append has more checks on type\nexport const append = hasAppend ?\n  (node, childNodes) => {\n    node.append.apply(node, childNodes);\n  } :\n  (node, childNodes) => {\n    const length = childNodes.length;\n    for (let i = 0; i < length; i++) {\n      node.appendChild(childNodes[i]);\n    }\n  };\n\n// remove comments parts from attributes to avoid issues\n// with either old browsers or SVG elements\n// export const cleanAttributes = html => html.replace(no, comments);\nconst attrName = '[^\\\\S]+[^ \\\\f\\\\n\\\\r\\\\t\\\\/>\"\\'=]+';\nconst no = new RegExp(\n  '(<[a-z]+[a-z0-9:_-]*)((?:' +\n    attrName +\n  '(?:=(?:\\'.*?\\'|\".*?\"|<.+?>|\\\\S+))?)+)([^\\\\S]*/?>)',\n  'gi'\n);\nconst findAttributes = new RegExp('(' + attrName + '=)([\\'\"]?)' + UIDC + '\\\\2', 'gi');\nconst comments = ($0, $1, $2, $3) =>\n  $1 + $2.replace(findAttributes, replaceAttributes) + $3;\nconst replaceAttributes = ($0, $1, $2) => $1 + ($2 || '\"') + UID + ($2 || '\"');\n\n// given a node and a generic HTML content,\n// create either an SVG or an HTML fragment\n// where such content will be injected\nexport const createFragment = (node, html) =>\n  (OWNER_SVG_ELEMENT in node ?\n    SVGFragment :\n    HTMLFragment\n  )(node, html.replace(no, comments));\n\n// IE/Edge shenanigans proof cloneNode\n// it goes through all nodes manually\n// instead of relying the engine to suddenly\n// merge nodes together\nconst cloneNode = hasDoomedCloneNode ?\n  node => {\n    const clone = node.cloneNode();\n    const childNodes = node.childNodes ||\n                      // this is an excess of caution\n                      // but some node, in IE, might not\n                      // have childNodes property.\n                      // The following fallback ensure working code\n                      // in older IE without compromising performance\n                      // or any other browser/engine involved.\n                      /* istanbul ignore next */\n                      [];\n    const length = childNodes.length;\n    for (let i = 0; i < length; i++) {\n      clone.appendChild(cloneNode(childNodes[i]));\n    }\n    return clone;\n  } :\n  // the following ignore is due code-coverage\n  // combination of not having document.importNode\n  // but having a working node.cloneNode.\n  // This shenario is common on older Android/WebKit browsers\n  // but basicHTML here tests just two major cases:\n  // with document.importNode or with broken cloneNode.\n  /* istanbul ignore next */\n  node => node.cloneNode(true);\n\n// used to import html into fragments\nexport const importNode = hasImportNode ?\n  (doc, node) => doc.importNode(node, true) :\n  (doc, node) => cloneNode(node)\n\n// just recycling a one-off array to use slice\n// in every needed place\nexport const slice = [].slice;\n\n// lazy evaluated, returns the unique identity\n// of a template literal, as tempalte literal itself.\n// By default, ES2015 template literals are unique\n// tag`a${1}z` === tag`a${2}z`\n// even if interpolated values are different\n// the template chunks are in a frozen Array\n// that is identical each time you use the same\n// literal to represent same static content\n// around its own interpolations.\nexport const unique = template => TL(template);\n\n// TL returns a unique version of the template\n// it needs lazy feature detection\n// (cannot trust literals with transpiled code)\nlet TL = template => {\n  if (\n    // TypeScript template literals are not standard\n    template.propertyIsEnumerable('raw') ||\n    (\n      // Firefox < 55 has not standard implementation neither\n      /Firefox\\/(\\d+)/.test((G.navigator || {}).userAgent) &&\n      parseFloat(RegExp.$1) < 55\n    )\n  ) {\n    // in these cases, address templates once\n    const templateObjects = {};\n    // but always return the same template\n    TL = template => {\n      const key = '_' + template.join(UID);\n      return templateObjects[key] || (\n        templateObjects[key] = template\n      );\n    };\n  }\n  else {\n    // make TL an identity like function\n    TL = template => template;\n  }\n  return TL(template);\n};\n\n// create document fragments via native template\n// with a fallback for browsers that won't be able\n// to deal with some injected element such <td> or others\nconst HTMLFragment = hasContent ?\n  (node, html) => {\n    const container = create(node, 'template');\n    container.innerHTML = html;\n    return container.content;\n  } :\n  (node, html) => {\n    const container = create(node, 'template');\n    const content = fragment(node);\n    if (/^[^\\S]*?<(col(?:group)?|t(?:head|body|foot|r|d|h))/i.test(html)) {\n      const selector = RegExp.$1;\n      container.innerHTML = '<table>' + html + '</table>';\n      append(content, slice.call(container.querySelectorAll(selector)));\n    } else {\n      container.innerHTML = html;\n      append(content, slice.call(container.childNodes));\n    }\n    return content;\n  };\n\n// creates SVG fragment with a fallback for IE that needs SVG\n// within the HTML content\nconst SVGFragment = hasContent ?\n  (node, html) => {\n    const content = fragment(node);\n    const container = doc(node).createElementNS(SVG_NAMESPACE, 'svg');\n    container.innerHTML = html;\n    append(content, slice.call(container.childNodes));\n    return content;\n  } :\n  (node, html) => {\n    const content = fragment(node);\n    const container = create(node, 'div');\n    container.innerHTML = '<svg xmlns=\"' + SVG_NAMESPACE + '\">' + html + '</svg>';\n    append(content, slice.call(container.firstChild.childNodes));\n    return content;\n  };\n","import { append } from '../shared/utils.js';\nimport { doc, fragment } from '../shared/easy-dom.js';\n\nexport default function Wire(childNodes) {\n  this.childNodes = childNodes;\n  this.length = childNodes.length;\n  this.first = childNodes[0];\n  this.last = childNodes[this.length - 1];\n}\n\n// when a wire is inserted, all its nodes will follow\nWire.prototype.insert = function insert() {\n  const df = fragment(this.first);\n  append(df, this.childNodes);\n  return df;\n};\n\n// when a wire is removed, all its nodes must be removed as well\nWire.prototype.remove = function remove() {\n  const first = this.first;\n  const last = this.last;\n  if (this.length === 2) {\n    last.parentNode.removeChild(last);\n  } else {\n    const range = doc(first).createRange();\n    range.setStartBefore(this.childNodes[1]);\n    range.setEndAfter(last);\n    range.deleteContents();\n  }\n  return first;\n};\n","import {\n  COMMENT_NODE,\n  DOCUMENT_FRAGMENT_NODE,\n  ELEMENT_NODE\n} from '../shared/constants.js';\n\n// every template literal interpolation indicates\n// a precise target in the DOM the template is representing.\n// `<p id=${'attribute'}>some ${'content'}</p>`\n// hyperHTML finds only once per template literal,\n// hence once per entire application life-cycle,\n// all nodes that are related to interpolations.\n// These nodes are stored as indexes used to retrieve,\n// once per upgrade, nodes that will change on each future update.\n// A path example is [2, 0, 1] representing the operation:\n// node.childNodes[2].childNodes[0].childNodes[1]\n// Attributes are addressed via their owner node and their name.\nconst createPath = node => {\n  const path = [];\n  let parentNode;\n  switch (node.nodeType) {\n    case ELEMENT_NODE:\n    case DOCUMENT_FRAGMENT_NODE:\n      parentNode = node;\n      break;\n    case COMMENT_NODE:\n      parentNode = node.parentNode;\n      prepend(path, parentNode, node);\n      break;\n    default:\n      parentNode = node.ownerElement;\n      break;\n  }\n  for (\n    node = parentNode;\n    (parentNode = parentNode.parentNode);\n    node = parentNode\n  ) {\n    prepend(path, parentNode, node);\n  }\n  return path;\n};\n\nconst prepend = (path, parent, node) => {\n  path.unshift(path.indexOf.call(parent.childNodes, node));\n};\n\nexport default {\n  create: (type, node, name) => ({type, name, node, path: createPath(node)}),\n  find: (node, path) => {\n    const length = path.length;\n    for (let i = 0; i < length; i++) {\n      node = node.childNodes[path[i]];\n    }\n    return node;\n  }\n}\n","// from https://github.com/developit/preact/blob/33fc697ac11762a1cb6e71e9847670d047af7ce5/src/constants.js\nconst IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n\n// style is handled as both string and object\n// even if the target is an SVG element (consistency)\nexport default (node, original, isSVG) => {\n  if (isSVG) {\n    const style = original.cloneNode(true);\n    style.value = '';\n    node.setAttributeNode(style);\n    return update(style, isSVG);\n  }\n  return update(node.style, isSVG);\n};\n\n// the update takes care or changing/replacing\n// only properties that are different or\n// in case of string, the whole node\nconst update = (style, isSVG) => {\n  let oldType, oldValue;\n  return newValue => {\n    switch (typeof newValue) {\n      case 'object':\n        if (newValue) {\n          if (oldType === 'object') {\n            if (!isSVG) {\n              if (oldValue !== newValue) {\n                for (const key in oldValue) {\n                  if (!(key in newValue)) {\n                    style[key] = '';\n                  }\n                }\n              }\n            }\n          } else {\n            if (isSVG) style.value = '';\n            else style.cssText = '';\n          }\n          const info = isSVG ? {} : style;\n          for (const key in newValue) {\n            const value = newValue[key];\n            info[key] = typeof value === 'number' &&\n                        !IS_NON_DIMENSIONAL.test(key) ?\n                          (value + 'px') : value;\n          }\n          oldType = 'object';\n          if (isSVG) style.value = toStyle((oldValue = info));\n          else oldValue = newValue;\n          break;\n        }\n      default:\n        if (oldValue != newValue) {\n          oldType = 'string';\n          oldValue = newValue;\n          if (isSVG) style.value = newValue || '';\n          else style.cssText = newValue || '';\n        }\n        break;\n    }\n  };\n};\n\nconst hyphen = /([^A-Z])([A-Z]+)/g;\nconst ized = ($0, $1, $2) => $1 + '-' + $2.toLowerCase();\nconst toStyle = object => {\n  const css = [];\n  for (const key in object) {\n    css.push(key.replace(hyphen, ized), ':', object[key], ';');\n  }\n  return css.join('');\n};","/* AUTOMATICALLY IMPORTED, DO NOT MODIFY */\n/*! (c) 2017 Andrea Giammarchi (ISC) */\n\n/**\n * This code is a revisited port of the snabbdom vDOM diffing logic,\n * the same that fuels as fork Vue.js or other libraries.\n * @credits https://github.com/snabbdom/snabbdom\n */\n\nconst identity = O => O;\n\nconst domdiff = (\n  parentNode,     // where changes happen\n  currentNodes,   // Array of current items/nodes\n  futureNodes,    // Array of future items/nodes\n  getNode,        // optional way to retrieve a node from an item\n  beforeNode      // optional item/node to use as insertBefore delimiter\n) => {\n  const get = getNode || identity;\n  const before = beforeNode == null ? null : get(beforeNode, 0);\n  let currentStart = 0, futureStart = 0;\n  let currentEnd = currentNodes.length - 1;\n  let currentStartNode = currentNodes[0];\n  let currentEndNode = currentNodes[currentEnd];\n  let futureEnd = futureNodes.length - 1;\n  let futureStartNode = futureNodes[0];\n  let futureEndNode = futureNodes[futureEnd];\n  while (currentStart <= currentEnd && futureStart <= futureEnd) {\n    if (currentStartNode == null) {\n      currentStartNode = currentNodes[++currentStart];\n    }\n    else if (currentEndNode == null) {\n      currentEndNode = currentNodes[--currentEnd];\n    }\n    else if (futureStartNode == null) {\n      futureStartNode = futureNodes[++futureStart];\n    }\n    else if (futureEndNode == null) {\n      futureEndNode = futureNodes[--futureEnd];\n    }\n    else if (currentStartNode == futureStartNode) {\n      currentStartNode = currentNodes[++currentStart];\n      futureStartNode = futureNodes[++futureStart];\n    }\n    else if (currentEndNode == futureEndNode) {\n      currentEndNode = currentNodes[--currentEnd];\n      futureEndNode = futureNodes[--futureEnd];\n    }\n    else if (currentStartNode == futureEndNode) {\n      parentNode.insertBefore(\n        get(currentStartNode, 1),\n        get(currentEndNode, -0).nextSibling\n      );\n      currentStartNode = currentNodes[++currentStart];\n      futureEndNode = futureNodes[--futureEnd];\n    }\n    else if (currentEndNode == futureStartNode) {\n      parentNode.insertBefore(\n        get(currentEndNode, 1),\n        get(currentStartNode, 0)\n      );\n      currentEndNode = currentNodes[--currentEnd];\n      futureStartNode = futureNodes[++futureStart];\n    }\n    else {\n      let index = currentNodes.indexOf(futureStartNode);\n      if (index < 0) {\n        parentNode.insertBefore(\n          get(futureStartNode, 1),\n          get(currentStartNode, 0)\n        );\n        futureStartNode = futureNodes[++futureStart];\n      }\n      else {\n        let el = currentNodes[index];\n        currentNodes[index] = null;\n        parentNode.insertBefore(\n          get(el, 1),\n          get(currentStartNode, 0)\n        );\n        futureStartNode = futureNodes[++futureStart];\n      }\n    }\n  }\n  if (currentStart > currentEnd) {\n    const pin = futureNodes[futureEnd + 1];\n    const place = pin != null ? get(pin, 0) : before;\n    while (futureStart <= futureEnd) {\n      const ch = futureNodes[futureStart++];\n      // ignore until I am sure the else could never happen.\n      // it might be a vDOM thing 'cause it never happens here.\n      /* istanbul ignore else */\n      if (ch != null) parentNode.insertBefore(get(ch, 1), place);\n    }\n  }\n  // ignore until I am sure the else could never happen.\n  // it might be a vDOM thing 'cause it never happens here.\n  /* istanbul ignore else */\n  else if (futureStart > futureEnd) {\n    while (currentStart <= currentEnd) {\n      const ch = currentNodes[currentStart++];\n      if (ch != null) parentNode.removeChild(get(ch, -1));\n    }\n  }\n  return futureNodes;\n};\n\nexport default domdiff;\n","import {\n  CONNECTED, DISCONNECTED,\n  COMMENT_NODE, DOCUMENT_FRAGMENT_NODE, ELEMENT_NODE, TEXT_NODE,\n  OWNER_SVG_ELEMENT,\n  SHOULD_USE_TEXT_CONTENT,\n  UID, UIDC\n} from '../shared/constants.js';\n\nimport Component from '../classes/Component.js';\nimport Wire from '../classes/Wire.js';\nimport Path from './Path.js';\nimport Style from './Style.js';\nimport Intent from './Intent.js';\nimport domdiff from '../shared/domdiff.js';\nimport { create as createElement, text } from '../shared/easy-dom.js';\nimport { Event, WeakSet, isArray, trim } from '../shared/poorlyfills.js';\nimport { createFragment, slice } from '../shared/utils.js';\n\n// hyper.Component have a connected/disconnected\n// mechanism provided by MutationObserver\n// This weak set is used to recognize components\n// as DOM node that needs to trigger connected/disconnected events\nconst components = new WeakSet;\n\n// a basic dictionary used to filter already cached attributes\n// while looking for special hyperHTML values.\nfunction Cache() {}\nCache.prototype = Object.create(null);\n\n// returns an intent to explicitly inject content as html\nconst asHTML = html => ({html});\n\n// returns nodes from wires and components\nconst asNode = (item, i) => {\n  return 'ELEMENT_NODE' in item ?\n    item :\n    (item.constructor === Wire ?\n      // in the Wire case, the content can be\n      // removed, post-pended, inserted, or pre-pended and\n      // all these cases are handled by domdiff already\n      /* istanbul ignore next */\n      ((1 / i) < 0 ?\n        (i ? item.remove() : item.last) :\n        (i ? item.insert() : item.first)) :\n      asNode(item.render(), i));\n}\n\n// returns true if domdiff can handle the value\nconst canDiff = value =>  'ELEMENT_NODE' in value ||\nvalue instanceof Wire ||\nvalue instanceof Component;\n\n// updates are created once per context upgrade\n// within the main render function (../hyper/render.js)\n// These are an Array of callbacks to invoke passing\n// each interpolation value.\n// Updates can be related to any kind of content,\n// attributes, or special text-only cases such <style>\n// elements or <textarea>\nconst create = (root, paths) => {\n  const updates = [];\n  const length = paths.length;\n  for (let i = 0; i < length; i++) {\n    const info = paths[i];\n    const node = Path.find(root, info.path);\n    switch (info.type) {\n      case 'any':\n        updates.push(setAnyContent(node, []));\n        break;\n      case 'attr':\n        updates.push(setAttribute(node, info.name, info.node));\n        break;\n      case 'text':\n        updates.push(setTextContent(node));\n        break;\n    }\n  }\n  return updates;\n};\n\n// finding all paths is a one-off operation performed\n// when a new template literal is used.\n// The goal is to map all target nodes that will be\n// used to update content/attributes every time\n// the same template literal is used to create content.\n// The result is a list of paths related to the template\n// with all the necessary info to create updates as\n// list of callbacks that target directly affected nodes.\nconst find = (node, paths, parts) => {\n  const childNodes = node.childNodes;\n  const length = childNodes.length;\n  for (let i = 0; i < length; i++) {\n    let child = childNodes[i];\n    switch (child.nodeType) {\n      case ELEMENT_NODE:\n        findAttributes(child, paths, parts);\n        find(child, paths, parts);\n        break;\n      case COMMENT_NODE:\n        if (child.textContent === UID) {\n          parts.shift();\n          paths.push(\n            // basicHTML or other non standard engines\n            // might end up having comments in nodes\n            // where they shouldn't, hence this check.\n            SHOULD_USE_TEXT_CONTENT.test(node.nodeName) ?\n              Path.create('text', node) :\n              Path.create('any', child)\n          );\n        }\n        break;\n      case TEXT_NODE:\n        // the following ignore is actually covered by browsers\n        // only basicHTML ends up on previous COMMENT_NODE case\n        // instead of TEXT_NODE because it knows nothing about\n        // special style or textarea behavior\n        /* istanbul ignore if */\n        if (\n          SHOULD_USE_TEXT_CONTENT.test(node.nodeName) &&\n          trim.call(child.textContent) === UIDC\n        ) {\n          parts.shift();\n          paths.push(Path.create('text', node));\n        }\n        break;\n    }\n  }\n};\n\n// attributes are searched via unique hyperHTML id value.\n// Despite HTML being case insensitive, hyperHTML is able\n// to recognize attributes by name in a caseSensitive way.\n// This plays well with Custom Elements definitions\n// and also with XML-like environments, without trusting\n// the resulting DOM but the template literal as the source of truth.\n// IE/Edge has a funny bug with attributes and these might be duplicated.\n// This is why there is a cache in charge of being sure no duplicated\n// attributes are ever considered in future updates.\nconst findAttributes = (node, paths, parts) => {\n  const cache = new Cache;\n  const attributes = node.attributes;\n  const array = slice.call(attributes);\n  const remove = [];\n  const length = array.length;\n  for (let i = 0; i < length; i++) {\n    const attribute = array[i];\n    if (attribute.value === UID) {\n      const name = attribute.name;\n      // the following ignore is covered by IE\n      // and the IE9 double viewBox test\n      /* istanbul ignore else */\n      if (!(name in cache)) {\n        const realName = parts.shift().replace(/^(?:|[\\S\\s]*?\\s)(\\S+?)=['\"]?$/, '$1');\n        cache[name] = attributes[realName] ||\n                      // the following ignore is covered by browsers\n                      // while basicHTML is already case-sensitive\n                      /* istanbul ignore next */\n                      attributes[realName.toLowerCase()];\n        paths.push(Path.create('attr', cache[name], realName));\n      }\n      remove.push(attribute);\n    }\n  }\n  const len = remove.length;\n  for (let i = 0; i < len; i++) {\n    node.removeAttributeNode(remove[i]);\n  }\n\n  // This is a very specific Firefox/Safari issue\n  // but since it should be a not so common pattern,\n  // it's probably worth patching regardless.\n  // Basically, scripts created through strings are death.\n  // You need to create fresh new scripts instead.\n  // TODO: is there any other node that needs such nonsense ?\n  const nodeName = node.nodeName;\n  if (/^script$/i.test(nodeName)) {\n    const script = createElement(node, nodeName);\n    for (let i = 0; i < attributes.length; i++) {\n      script.setAttributeNode(attributes[i].cloneNode(true));\n    }\n    script.textContent = node.textContent;\n    node.parentNode.replaceChild(script, node);\n  }\n};\n\n// when a Promise is used as interpolation value\n// its result must be parsed once resolved.\n// This callback is in charge of understanding what to do\n// with a returned value once the promise is resolved.\nconst invokeAtDistance = (value, callback) => {\n  callback(value.placeholder);\n  if ('text' in value) {\n    Promise.resolve(value.text).then(String).then(callback);\n  } else if ('any' in value) {\n    Promise.resolve(value.any).then(callback);\n  } else if ('html' in value) {\n    Promise.resolve(value.html).then(asHTML).then(callback);\n  } else {\n    Promise.resolve(Intent.invoke(value, callback)).then(callback);\n  }\n};\n\n// quick and dirty way to check for Promise/ish values\nconst isPromise_ish = value => value != null && 'then' in value;\n\n// in a hyper(node)`<div>${content}</div>` case\n// everything could happen:\n//  * it's a JS primitive, stored as text\n//  * it's null or undefined, the node should be cleaned\n//  * it's a component, update the content by rendering it\n//  * it's a promise, update the content once resolved\n//  * it's an explicit intent, perform the desired operation\n//  * it's an Array, resolve all values if Promises and/or\n//    update the node with the resulting list of content\nconst setAnyContent = (node, childNodes) => {\n  let fastPath = false;\n  let oldValue;\n  const anyContent = value => {\n    switch (typeof value) {\n      case 'string':\n      case 'number':\n      case 'boolean':\n        if (fastPath) {\n          if (oldValue !== value) {\n            oldValue = value;\n            childNodes[0].textContent = value;\n          }\n        } else {\n          fastPath = true;\n          oldValue = value;\n          childNodes = domdiff(\n            node.parentNode,\n            childNodes,\n            [text(node, value)],\n            asNode,\n            node\n          );\n        }\n        break;\n      case 'object':\n      case 'undefined':\n        if (value == null) {\n          fastPath = false;\n          childNodes = domdiff(\n            node.parentNode,\n            childNodes,\n            [],\n            asNode,\n            node\n          );\n          break;\n        }\n      default:\n        fastPath = false;\n        oldValue = value;\n        if (isArray(value)) {\n          if (value.length === 0) {\n            if (childNodes.length) {\n              childNodes = domdiff(\n                node.parentNode,\n                childNodes,\n                [],\n                asNode,\n                node\n              );\n            }\n          } else {\n            switch (typeof value[0]) {\n              case 'string':\n              case 'number':\n              case 'boolean':\n                anyContent({html: value});\n                break;\n              case 'object':\n                if (isArray(value[0])) {\n                  value = value.concat.apply([], value);\n                }\n                if (isPromise_ish(value[0])) {\n                  Promise.all(value).then(anyContent);\n                  break;\n                }\n              default:\n                childNodes = domdiff(\n                  node.parentNode,\n                  childNodes,\n                  value,\n                  asNode,\n                  node\n                );\n                break;\n            }\n          }\n        } else if (canDiff(value)) {\n          childNodes = domdiff(\n            node.parentNode,\n            childNodes,\n            value.nodeType === DOCUMENT_FRAGMENT_NODE ?\n              slice.call(value.childNodes) :\n              [value],\n            asNode,\n            node\n          );\n        } else if (isPromise_ish(value)) {\n          value.then(anyContent);\n        } else if ('placeholder' in value) {\n          invokeAtDistance(value, anyContent);\n        } else if ('text' in value) {\n          anyContent(String(value.text));\n        } else if ('any' in value) {\n          anyContent(value.any);\n        } else if ('html' in value) {\n          childNodes = domdiff(\n            node.parentNode,\n            childNodes,\n            slice.call(\n              createFragment(\n                node,\n                [].concat(value.html).join('')\n              ).childNodes\n            ),\n            asNode,\n            node\n          );\n        } else if ('length' in value) {\n          anyContent(slice.call(value));\n        } else {\n          anyContent(Intent.invoke(value, anyContent));\n        }\n        break;\n    }\n  };\n  return anyContent;\n};\n\n// there are four kind of attributes, and related behavior:\n//  * events, with a name starting with `on`, to add/remove event listeners\n//  * special, with a name present in their inherited prototype, accessed directly\n//  * regular, accessed through get/setAttribute standard DOM methods\n//  * style, the only regular attribute that also accepts an object as value\n//    so that you can style=${{width: 120}}. In this case, the behavior has been\n//    fully inspired by Preact library and its simplicity.\nconst setAttribute = (node, name, original) => {\n  const isSVG = OWNER_SVG_ELEMENT in node;\n  let oldValue;\n  // if the attribute is the style one\n  // handle it differently from others\n  if (name === 'style') {\n    return Style(node, original, isSVG);\n  }\n  // the name is an event one,\n  // add/remove event listeners accordingly\n  else if (/^on/.test(name)) {\n    let type = name.slice(2);\n    if (type === CONNECTED || type === DISCONNECTED) {\n      if (notObserving) {\n        notObserving = false;\n        observe();\n      }\n      components.add(node);\n    }\n    else if (name.toLowerCase() in node) {\n      type = type.toLowerCase();\n    }\n    return newValue => {\n      if (oldValue !== newValue) {\n        if (oldValue) node.removeEventListener(type, oldValue, false);\n        oldValue = newValue;\n        if (newValue) node.addEventListener(type, newValue, false);\n      }\n    };\n  }\n  // the attribute is special ('value' in input)\n  // and it's not SVG *or* the name is exactly data,\n  // in this case assign the value directly\n  else if (name === 'data' || (!isSVG && name in node)) {\n    return newValue => {\n      if (oldValue !== newValue) {\n        oldValue = newValue;\n        if (node[name] !== newValue) {\n          node[name] = newValue;\n          if (newValue == null) {\n            node.removeAttribute(name);\n          }\n        }\n      }\n    };\n  }\n  // in every other case, use the attribute node as it is\n  // update only the value, set it as node only when/if needed\n  else {\n    let owner = false;\n    const attribute = original.cloneNode(true);\n    return newValue => {\n      if (oldValue !== newValue) {\n        oldValue = newValue;\n        if (attribute.value !== newValue) {\n          if (newValue == null) {\n            if (owner) {\n              owner = false;\n              node.removeAttributeNode(attribute);\n            }\n            attribute.value = newValue;\n          } else {\n            attribute.value = newValue;\n            if (!owner) {\n              owner = true;\n              node.setAttributeNode(attribute);\n            }\n          }\n        }\n      }\n    };\n  }\n};\n\n// style or textareas don't accept HTML as content\n// it's pointless to transform or analyze anything\n// different from text there but it's worth checking\n// for possible defined intents.\nconst setTextContent = node => {\n  let oldValue;\n  const textContent = value => {\n    if (oldValue !== value) {\n      oldValue = value;\n      if (typeof value === 'object' && value) {\n        if (isPromise_ish(value)) {\n          value.then(textContent);\n        } else if ('placeholder' in value) {\n          invokeAtDistance(value, textContent);\n        } else if ('text' in value) {\n          textContent(String(value.text));\n        } else if ('any' in value) {\n          textContent(value.any);\n        } else if ('html' in value) {\n          textContent([].concat(value.html).join(''));\n        } else if ('length' in value) {\n          textContent(slice.call(value).join(''));\n        } else {\n          textContent(Intent.invoke(value, textContent));\n        }\n      } else {\n        node.textContent = value == null ? '' : value;\n      }\n    }\n  };\n  return textContent;\n};\n\nexport default {create, find};\n\n// hyper.Components might need connected/disconnected notifications\n// used by components and their onconnect/ondisconnect callbacks.\n// When one of these callbacks is encountered,\n// the document starts being observed.\nlet notObserving = true;\nfunction observe() {\n\n  // when hyper.Component related DOM nodes\n  // are appended or removed from the live tree\n  // these might listen to connected/disconnected events\n  // This utility is in charge of finding all components\n  // involved in the DOM update/change and dispatch\n  // related information to them\n  const dispatchAll = (nodes, type) => {\n    const event = new Event(type);\n    const length = nodes.length;\n    for (let i = 0; i < length; i++) {\n      let node = nodes[i];\n      if (node.nodeType === ELEMENT_NODE) {\n        dispatchTarget(node, event);\n      }\n    }\n  };\n\n  // the way it's done is via the components weak set\n  // and recursively looking for nested components too\n  const dispatchTarget = (node, event) => {\n    if (components.has(node)) {\n      node.dispatchEvent(event);\n    } else {\n      const children = node.children;\n      const length = children.length;\n      for (let i = 0; i < length; i++) {\n        dispatchTarget(children[i], event);\n      }\n    }\n  }\n\n  // The MutationObserver is the best way to implement that\n  // but there is a fallback to deprecated DOMNodeInserted/Removed\n  // so that even older browsers/engines can help components life-cycle\n  try {\n    (new MutationObserver(records => {\n      const length = records.length;\n      for (let i = 0; i < length; i++) {\n        let record = records[i];\n        dispatchAll(record.removedNodes, DISCONNECTED);\n        dispatchAll(record.addedNodes, CONNECTED);\n      }\n    })).observe(document, {subtree: true, childList: true});\n  } catch(o_O) {\n    document.addEventListener('DOMNodeRemoved', event => {\n      dispatchAll([event.target], DISCONNECTED);\n    }, false);\n    document.addEventListener('DOMNodeInserted', event => {\n      dispatchAll([event.target], CONNECTED);\n    }, false);\n  }\n}\n","import {Map, WeakMap} from '../shared/poorlyfills.js';\nimport {UIDC} from '../shared/constants.js';\nimport Updates from '../objects/Updates.js';\nimport {\n  createFragment,\n  importNode,\n  unique\n} from '../shared/utils.js';\n\n// a weak collection of contexts that\n// are already known to hyperHTML\nconst bewitched = new WeakMap;\n\n// the collection of all template literals\n// since these are unique and immutable\n// for the whole application life-cycle\nconst templates = new Map;\n\n// better known as hyper.bind(node), the render is\n// the main tag function in charge of fully upgrading\n// or simply updating, contexts used as hyperHTML targets.\n// The `this` context is either a regular DOM node or a fragment.\nfunction render(template) {\n  const wicked = bewitched.get(this);\n  if (wicked && wicked.template === unique(template)) {\n    update.apply(wicked.updates, arguments);\n  } else {\n    upgrade.apply(this, arguments);\n  }\n  return this;\n}\n\n// an upgrade is in charge of collecting template info,\n// parse it once, if unknown, to map all interpolations\n// as single DOM callbacks, relate such template\n// to the current context, and render it after cleaning the context up\nfunction upgrade(template) {\n  template = unique(template);\n  const info =  templates.get(template) ||\n                createTemplate.call(this, template);\n  const fragment = importNode(this.ownerDocument, info.fragment);\n  const updates = Updates.create(fragment, info.paths);\n  bewitched.set(this, {template, updates});\n  update.apply(updates, arguments);\n  this.textContent = '';\n  this.appendChild(fragment);\n}\n\n// an update simply loops over all mapped DOM operations\nfunction update() {\n  const length = arguments.length;\n  for (let i = 1; i < length; i++) {\n    this[i - 1](arguments[i]);\n  }\n}\n\n// a template can be used to create a document fragment\n// aware of all interpolations and with a list\n// of paths used to find once those nodes that need updates,\n// no matter if these are attributes, text nodes, or regular one\nfunction createTemplate(template) {\n  const paths = [];\n  const fragment = createFragment(this, template.join(UIDC));\n  Updates.find(fragment, paths, template.slice());\n  const info = {fragment, paths};\n  templates.set(template, info);\n  return info;\n}\n\nexport default render;\n","import {ELEMENT_NODE, SVG_NAMESPACE} from '../shared/constants.js';\nimport {WeakMap, trim} from '../shared/poorlyfills.js';\nimport {fragment} from '../shared/easy-dom.js';\nimport {append, slice, unique} from '../shared/utils.js';\nimport Wire from '../classes/Wire.js';\nimport render from './render.js';\n\n// all wires used per each context\nconst wires = new WeakMap;\n\n// A wire is a callback used as tag function\n// to lazily relate a generic object to a template literal.\n// hyper.wire(user)`<div id=user>${user.name}</div>`; => the div#user\n// This provides the ability to have a unique DOM structure\n// related to a unique JS object through a reusable template literal.\n// A wire can specify a type, as svg or html, and also an id\n// via html:id or :id convention. Such :id allows same JS objects\n// to be associated to different DOM structures accordingly with\n// the used template literal without losing previously rendered parts.\nconst wire = (obj, type) => obj == null ?\n  content(type || 'html') :\n  weakly(obj, type || 'html');\n\n// A wire content is a virtual reference to one or more nodes.\n// It's represented by either a DOM node, or an Array.\n// In both cases, the wire content role is to simply update\n// all nodes through the list of related callbacks.\n// In few words, a wire content is like an invisible parent node\n// in charge of updating its content like a bound element would do.\nconst content = type => {\n  let wire, container, content, template, updates;\n  return function (statics) {\n    statics = unique(statics);\n    let setup = template !== statics;\n    if (setup) {\n      template = statics;\n      content = fragment(document);\n      container = type === 'svg' ?\n        document.createElementNS(SVG_NAMESPACE, 'svg') :\n        content;\n      updates = render.bind(container);\n    }\n    updates.apply(null, arguments);\n    if (setup) {\n      if (type === 'svg') {\n        append(content, slice.call(container.childNodes));\n      }\n      wire = wireContent(content);\n    }\n    return wire;\n  };\n};\n\n// wires are weakly created through objects.\n// Each object can have multiple wires associated\n// and this is thanks to the type + :id feature.\nconst weakly = (obj, type) => {\n  const i = type.indexOf(':');\n  let wire = wires.get(obj);\n  let id = type;\n  if (-1 < i) {\n    id = type.slice(i + 1);\n    type = type.slice(0, i) || 'html';\n  }\n  if (!wire) wires.set(obj, wire = {});\n  return wire[id] || (wire[id] = content(type));\n};\n\n// a document fragment loses its nodes as soon\n// as it's appended into another node.\n// This would easily lose wired content\n// so that on a second render call, the parent\n// node wouldn't know which node was there\n// associated to the interpolation.\n// To prevent hyperHTML to forget about wired nodes,\n// these are either returned as Array or, if there's ony one entry,\n// as single referenced node that won't disappear from the fragment.\n// The initial fragment, at this point, would be used as unique reference.\nconst wireContent = node => {\n  const childNodes = node.childNodes;\n  const length = childNodes.length;\n  const wireNodes = [];\n  for (let i = 0; i < length; i++) {\n    let child = childNodes[i];\n    if (\n      child.nodeType === ELEMENT_NODE ||\n      trim.call(child.textContent).length !== 0\n    ) {\n      wireNodes.push(child);\n    }\n  }\n  return wireNodes.length === 1 ? wireNodes[0] : new Wire(wireNodes);\n};\n\nexport { content, weakly };\nexport default wire;\n","/*! (c) Andrea Giammarchi (ISC) */\n\nimport Component, {setup} from './classes/Component.js';\nimport Intent from './objects/Intent.js';\nimport wire, {content, weakly} from './hyper/wire.js';\nimport render from './hyper/render.js';\nimport diff from './shared/domdiff.js';\n\n// all functions are self bound to the right context\n// you can do the following\n// const {bind, wire} = hyperHTML;\n// and use them right away: bind(node)`hello!`;\nconst bind = context => render.bind(context);\nconst define = Intent.define;\n\nhyper.Component = Component;\nhyper.bind = bind;\nhyper.define = define;\nhyper.diff = diff;\nhyper.hyper = hyper;\nhyper.wire = wire;\n\n// the wire content is the lazy defined\n// html or svg property of each hyper.Component\nsetup(content);\n\n// everything is exported directly or through the\n// hyperHTML callback, when used as top level script\nexport {Component, bind, define, diff, hyper, wire};\n\n// by default, hyperHTML is a smart function\n// that \"magically\" understands what's the best\n// thing to do with passed arguments\nexport default function hyper(HTML) {\n  return arguments.length < 2 ?\n    (HTML == null ?\n      content('html') :\n      (typeof HTML === 'string' ?\n        wire(null, HTML) :\n        ('raw' in HTML ?\n          content('html')(HTML) :\n          ('nodeType' in HTML ?\n            render.bind(HTML) :\n            weakly(HTML, 'html')\n          )\n        )\n      )) :\n    ('raw' in HTML ?\n      content('html') : wire\n    ).apply(null, arguments);\n}\n","/* eslint-disable class-methods-use-this */\nimport { toCamelCase } from 'baseui-wc-utils/src/helpers';\nimport { HTMLCustomElement } from '../helpers/index.js';\nimport BootstrapElement from '../mixins/bootstrap-element/index.js';\n\n/**\n * custom element base class\n * below methods available to make this base element flexible\n *  - willConnect() this will be triggered before connectedCollaback()\n *  - didConnected() this will be triggered after connectedCallback() and before willRender()\n *  - willRender() will be triggered before render()\n *  - didRendered() will be triggered after render()\n */\nclass BaseCustomElement extends BootstrapElement(HTMLCustomElement) {\n    static get withShadowDom() { return false; }\n\n    init() {\n        this.isFirstRender = true;\n        this.renderRoot = this;\n\n        if (this.constructor.withShadowDom) {\n            this.attachShadow({ mode: 'open' });\n            this.renderRoot = this.shadowRoot;\n        }\n\n        // property observer to listen for value changes\n        const { observedProps } = this.constructor;\n        if (observedProps) this.ObservePropertyChanges(observedProps);\n\n        this.willConnect();\n    }\n\n    handleEvent(e) {\n        const hasInstanceMethod = `on${e.type}`;\n        if (!this[hasInstanceMethod] || (typeof this[hasInstanceMethod] !== 'function')) return;\n\n        this[hasInstanceMethod](e);\n    }\n\n    connectedCallback() {\n        this._create();\n    }\n\n    _create() {\n        // poxy attributes & observed attributes as properties\n        const { attributes }         = this;\n        const { observedAttributes } = this.constructor;\n        this.createAttributesToProperties(attributes, observedAttributes);\n\n        this.onConnect();\n        this._beforeRender();\n        this.set('enhanced', '');\n    }\n\n    attributeChangedCallback(attrName, oldVal, newVal) {\n        if (!oldVal || oldVal === newVal) return;\n\n        const propName = toCamelCase(attrName);\n        this[propName] = newVal;\n\n        this._beforeRender();\n    }\n\n    _beforeRender() {\n        // console.time(this.constructor.is.name);\n        this.willRender();\n\n        if (this.shouldRender) return;\n        this.shouldRender = true;\n\n        const asynCallback = () => {\n            this.shouldRender = false;\n\n            this.set('is-rendering', '');\n            this.render();\n            this._afterRender();\n        };\n\n        // batch render to improve performance\n        Promise.resolve().then(asynCallback);\n    }\n\n    _afterRender() {\n        if (this.isFirstRender) {\n            this.isFirstRender = false;\n            this.didConnected();\n        }\n\n        this.remove('is-rendering');\n        this.didRendered();\n        // console.timeEnd(this.constructor.is.name);\n    }\n\n    willConnect() {}\n    onConnect() {}\n    willRender() {}\n    render() {}\n    didRendered() {}\n    didConnected() {}\n}\n\nexport default BaseCustomElement;\n","import { bind, wire } from 'hyperhtml/esm/index.js';\nimport BaseCustomElement from '../index.js';\n\n/**\n *\n * @param {object} template literal which needs to be wired\n */\nexport const html = (...args) => wire()(...args);\n\n/**\n *\n * @param {object} template literal that needs to be rendered\n * @param {*} renderRoot defines where to render\n */\nexport const renderFn = (template, renderRoot) => bind(renderRoot)(template);\n\n/**\n * HOC which uses HyperHTML underneath to render custome elements\n */\nclass BaseCustomElementWithHyperHTML extends BaseCustomElement {\n    get domRender() {\n        return (...args) => bind(this.renderRoot)(...args);\n    }\n\n    get html() { return html; }\n}\n\nexport default BaseCustomElementWithHyperHTML;\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * TypeScript has a problem with precompiling templates literals\n * https://github.com/Microsoft/TypeScript/issues/17956\n *\n * TODO(justinfagnani): Run tests compiled to ES5 with both Babel and\n * TypeScript to verify correctness.\n */\nconst envCachesTemplates = ((t) => t() === t())(() => ((s) => s) ``);\n// The first argument to JS template tags retain identity across multiple\n// calls to a tag for the same literal, so we can cache work done per literal\n// in a Map.\nconst templates = new Map();\nconst svgTemplates = new Map();\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => litTag(strings, values, templates, false);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => litTag(strings, values, svgTemplates, true);\nfunction litTag(strings, values, templates, isSvg) {\n    const key = envCachesTemplates ?\n        strings :\n        strings.join('{{--uniqueness-workaround--}}');\n    let template = templates.get(key);\n    if (template === undefined) {\n        template = new Template(strings, isSvg);\n        templates.set(key, template);\n    }\n    return new TemplateResult(template, values);\n}\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(template, values) {\n        this.template = template;\n        this.values = values;\n    }\n}\n/**\n * Renders a template to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n */\nexport function render(result, container, partCallback = defaultPartCallback) {\n    let instance = container.__templateInstance;\n    // Repeat render, just call update()\n    if (instance !== undefined && instance.template === result.template &&\n        instance._partCallback === partCallback) {\n        instance.update(result.values);\n        return;\n    }\n    // First render, create a new TemplateInstance and append it\n    instance = new TemplateInstance(result.template, partCallback);\n    container.__templateInstance = instance;\n    const fragment = instance._clone();\n    instance.update(result.values);\n    let child;\n    while ((child = container.lastChild)) {\n        container.removeChild(child);\n    }\n    container.appendChild(fragment);\n}\n/**\n * An expression marker with embedded unique key to avoid\n * https://github.com/PolymerLabs/lit-html/issues/62\n */\nconst attributeMarker = `{{lit-${Math.random()}}}`;\n/**\n * Regex to scan the string preceding an expression to see if we're in a text\n * context, and not an attribute context.\n *\n * This works by seeing if we have a `>` not followed by a `<`. If there is a\n * `<` closer to the end of the strings, then we're inside a tag.\n */\nconst textRegex = />[^<]*$/;\nconst hasTagsRegex = /[^<]*/;\nconst textMarkerContent = '_-lit-html-_';\nconst textMarker = `<!--${textMarkerContent}-->`;\nconst attrOrTextRegex = new RegExp(`${attributeMarker}|${textMarker}`);\n/**\n * A placeholder for a dynamic expression in an HTML template.\n *\n * There are two built-in part types: AttributePart and NodePart. NodeParts\n * always represent a single dynamic expression, while AttributeParts may\n * represent as many expressions are contained in the attribute.\n *\n * A Template's parts are mutable, so parts can be replaced or modified\n * (possibly to implement different template semantics). The contract is that\n * parts can only be replaced, not removed, added or reordered, and parts must\n * always consume the correct number of values in their `update()` method.\n *\n * TODO(justinfagnani): That requirement is a little fragile. A\n * TemplateInstance could instead be more careful about which values it gives\n * to Part.update().\n */\nexport class TemplatePart {\n    constructor(type, index, name, rawName, strings) {\n        this.type = type;\n        this.index = index;\n        this.name = name;\n        this.rawName = rawName;\n        this.strings = strings;\n    }\n}\nexport class Template {\n    constructor(strings, svg = false) {\n        this.parts = [];\n        this.svg = svg;\n        this.element = document.createElement('template');\n        this.element.innerHTML = this._getHtml(strings, svg);\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(this.element.content, 133 /* NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT |\n               NodeFilter.SHOW_TEXT */, null, false);\n        let index = -1;\n        let partIndex = 0;\n        const nodesToRemove = [];\n        // The actual previous node, accounting for removals: if a node is removed\n        // it will never be the previousNode.\n        let previousNode;\n        // Used to set previousNode at the top of the loop.\n        let currentNode;\n        while (walker.nextNode()) {\n            index++;\n            previousNode = currentNode;\n            const node = currentNode = walker.currentNode;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (!node.hasAttributes()) {\n                    continue;\n                }\n                const attributes = node.attributes;\n                for (let i = 0; i < attributes.length; i++) {\n                    const attribute = attributes.item(i);\n                    const attributeStrings = attribute.value.split(attrOrTextRegex);\n                    if (attributeStrings.length > 1) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute attribute\n                        const attributeString = strings[partIndex];\n                        // Trim the trailing literal value if this is an interpolation\n                        const rawNameString = attributeString.substring(0, attributeString.length - attributeStrings[0].length);\n                        // Find the attribute name\n                        const rawName = rawNameString.match(/((?:\\w|[.\\-_$])+)=[\"']?$/)[1];\n                        this.parts.push(new TemplatePart('attribute', index, attribute.name, rawName, attributeStrings));\n                        node.removeAttribute(attribute.name);\n                        partIndex += attributeStrings.length - 1;\n                        i--;\n                    }\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const nodeValue = node.nodeValue;\n                const strings = nodeValue.split(attributeMarker);\n                if (strings.length > 1) {\n                    const parent = node.parentNode;\n                    const lastIndex = strings.length - 1;\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                    // We keep this current node, but reset its content to the last\n                    // literal part. We insert new literal nodes before this so that the\n                    // tree walker keeps its position correctly.\n                    node.textContent = strings[lastIndex];\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        parent.insertBefore(document.createTextNode(strings[i]), node);\n                        this.parts.push(new TemplatePart('node', index++));\n                    }\n                }\n                else {\n                    // Strip whitespace-only nodes, only between elements, or at the\n                    // beginning or end of elements.\n                    const previousSibling = node.previousSibling;\n                    const nextSibling = node.nextSibling;\n                    if ((previousSibling === null ||\n                        previousSibling.nodeType === 1 /* Node.ELEMENT_NODE */) &&\n                        (nextSibling === null ||\n                            nextSibling.nodeType === 1 /* Node.ELEMENT_NODE */) &&\n                        nodeValue.trim() === '') {\n                        nodesToRemove.push(node);\n                        currentNode = previousNode;\n                        index--;\n                    }\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */ &&\n                node.nodeValue === textMarkerContent) {\n                const parent = node.parentNode;\n                // If we don't have a previous node add a marker node.\n                // If the previousSibling is removed, because it's another part\n                // placholder, or empty text, add a marker node.\n                if (node.previousSibling === null ||\n                    node.previousSibling !== previousNode) {\n                    parent.insertBefore(new Text(), node);\n                }\n                else {\n                    index--;\n                }\n                this.parts.push(new TemplatePart('node', index++));\n                nodesToRemove.push(node);\n                // If we don't have a next node add a marker node.\n                // We don't have to check if the next node is going to be removed,\n                // because that node will induce a marker if so.\n                if (node.nextSibling === null) {\n                    parent.insertBefore(new Text(), node);\n                }\n                else {\n                    index--;\n                }\n                currentNode = previousNode;\n                partIndex++;\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n    /**\n     * Returns a string of HTML used to create a <template> element.\n     */\n    _getHtml(strings, svg) {\n        const l = strings.length;\n        const a = [];\n        let isTextBinding = false;\n        for (let i = 0; i < l - 1; i++) {\n            const s = strings[i];\n            a.push(s);\n            // We're in a text position if the previous string matches the\n            // textRegex. If it doesn't and the previous string has no tags, then\n            // we use the previous text position state.\n            isTextBinding = s.match(textRegex) !== null ||\n                (s.match(hasTagsRegex) !== null && isTextBinding);\n            a.push(isTextBinding ? textMarker : attributeMarker);\n        }\n        a.push(strings[l - 1]);\n        const html = a.join('');\n        return svg ? `<svg>${html}</svg>` : html;\n    }\n}\nexport const getValue = (part, value) => {\n    // `null` as the value of a Text node will render the string 'null'\n    // so we convert it to undefined\n    if (value != null && value.__litDirective === true) {\n        value = value(part);\n    }\n    return value === null ? undefined : value;\n};\nexport const directive = (f) => {\n    f.__litDirective = true;\n    return f;\n};\nexport class AttributePart {\n    constructor(instance, element, name, strings) {\n        this.instance = instance;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.size = strings.length - 1;\n    }\n    setValue(values, startIndex) {\n        const strings = this.strings;\n        let text = '';\n        for (let i = 0; i < strings.length; i++) {\n            text += strings[i];\n            if (i < strings.length - 1) {\n                const v = getValue(this, values[startIndex + i]);\n                if (v &&\n                    (Array.isArray(v) || typeof v !== 'string' && v[Symbol.iterator])) {\n                    for (const t of v) {\n                        // TODO: we need to recursively call getValue into iterables...\n                        text += t;\n                    }\n                }\n                else {\n                    text += v;\n                }\n            }\n        }\n        this.element.setAttribute(this.name, text);\n    }\n}\nexport class NodePart {\n    constructor(instance, startNode, endNode) {\n        this.instance = instance;\n        this.startNode = startNode;\n        this.endNode = endNode;\n        this._previousValue = undefined;\n    }\n    setValue(value) {\n        value = getValue(this, value);\n        if (value === null ||\n            !(typeof value === 'object' || typeof value === 'function')) {\n            // Handle primitive values\n            // If the value didn't change, do nothing\n            if (value === this._previousValue) {\n                return;\n            }\n            this._setText(value);\n        }\n        else if (value instanceof TemplateResult) {\n            this._setTemplateResult(value);\n        }\n        else if (Array.isArray(value) || value[Symbol.iterator]) {\n            this._setIterable(value);\n        }\n        else if (value instanceof Node) {\n            this._setNode(value);\n        }\n        else if (value.then !== undefined) {\n            this._setPromise(value);\n        }\n        else {\n            // Fallback, will render the string representation\n            this._setText(value);\n        }\n    }\n    _insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    _setNode(value) {\n        this.clear();\n        this._insert(value);\n        this._previousValue = value;\n    }\n    _setText(value) {\n        const node = this.startNode.nextSibling;\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === Node.TEXT_NODE) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if _previousValue is\n            // primitive?\n            node.textContent = value;\n        }\n        else {\n            this._setNode(document.createTextNode(value === undefined ? '' : value));\n        }\n        this._previousValue = value;\n    }\n    _setTemplateResult(value) {\n        let instance;\n        if (this._previousValue &&\n            this._previousValue.template === value.template) {\n            instance = this._previousValue;\n        }\n        else {\n            instance =\n                new TemplateInstance(value.template, this.instance._partCallback);\n            this._setNode(instance._clone());\n            this._previousValue = instance;\n        }\n        instance.update(value.values);\n    }\n    _setIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _previousValue is an array, then the previous render was of an\n        // iterable and _previousValue will contain the NodeParts from the previous\n        // render. If _previousValue is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this._previousValue)) {\n            this.clear();\n            this._previousValue = [];\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this._previousValue;\n        let partIndex = 0;\n        for (const item of value) {\n            // Try to reuse an existing part\n            let itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                // If we're creating the first item part, it's startNode should be the\n                // container's startNode\n                let itemStart = this.startNode;\n                // If we're not creating the first part, create a new separator marker\n                // node, and fix up the previous part's endNode to point to it\n                if (partIndex > 0) {\n                    const previousPart = itemParts[partIndex - 1];\n                    itemStart = previousPart.endNode = document.createTextNode('');\n                    this._insert(itemStart);\n                }\n                itemPart = new NodePart(this.instance, itemStart, this.endNode);\n                itemParts.push(itemPart);\n            }\n            itemPart.setValue(item);\n            partIndex++;\n        }\n        if (partIndex === 0) {\n            this.clear();\n            this._previousValue = undefined;\n        }\n        else if (partIndex < itemParts.length) {\n            const lastPart = itemParts[partIndex - 1];\n            // Truncate the parts array so _previousValue reflects the current state\n            itemParts.length = partIndex;\n            this.clear(lastPart.endNode.previousSibling);\n            lastPart.endNode = this.endNode;\n        }\n    }\n    _setPromise(value) {\n        value.then((v) => {\n            if (this._previousValue === value) {\n                this.setValue(v);\n            }\n        });\n        this._previousValue = value;\n    }\n    clear(startNode = this.startNode) {\n        let node;\n        while ((node = startNode.nextSibling) !== this.endNode) {\n            node.parentNode.removeChild(node);\n        }\n    }\n}\nexport const defaultPartCallback = (instance, templatePart, node) => {\n    if (templatePart.type === 'attribute') {\n        return new AttributePart(instance, node, templatePart.name, templatePart.strings);\n    }\n    else if (templatePart.type === 'node') {\n        return new NodePart(instance, node, node.nextSibling);\n    }\n    throw new Error(`Unknown part type ${templatePart.type}`);\n};\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, partCallback = defaultPartCallback) {\n        this._parts = [];\n        this.template = template;\n        this._partCallback = partCallback;\n    }\n    update(values) {\n        let valueIndex = 0;\n        for (const part of this._parts) {\n            if (part.size === undefined) {\n                part.setValue(values[valueIndex]);\n                valueIndex++;\n            }\n            else {\n                part.setValue(values, valueIndex);\n                valueIndex += part.size;\n            }\n        }\n    }\n    _clone() {\n        const fragment = document.importNode(this.template.element.content, true);\n        if (this.template.parts.length > 0) {\n            // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be\n            // null\n            const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT */, null, false);\n            const parts = this.template.parts;\n            let index = 0;\n            let partIndex = 0;\n            let templatePart = parts[0];\n            let node = walker.nextNode();\n            while (node != null && partIndex < parts.length) {\n                if (index === templatePart.index) {\n                    this._parts.push(this._partCallback(this, templatePart, node));\n                    templatePart = parts[++partIndex];\n                }\n                else {\n                    index++;\n                    node = walker.nextNode();\n                }\n            }\n        }\n        if (this.template.svg) {\n            const svgElement = fragment.firstChild;\n            fragment.removeChild(svgElement);\n            const nodes = svgElement.childNodes;\n            for (let i = 0; i < nodes.length; i++) {\n                fragment.appendChild(nodes.item(i));\n            }\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributePart, defaultPartCallback, getValue, render as baseRender } from '../lit-html.js';\nexport { html } from '../lit-html.js';\n/**\n *\n * @param result Renders a `TemplateResult` to a container using the\n * `extendedPartCallback` PartCallback, which allows templates to set\n * properties and declarative event handlers.\n *\n * Properties are set by default, instead of attributes. Attribute names in\n * lit-html templates preserve case, so properties are case sensitive. If an\n * expression takes up an entire attribute value, then the property is set to\n * that value. If an expression is interpolated with a string or other\n * expressions then the property is set to the string result of the\n * interpolation.\n *\n * To set an attribute instead of a property, append a `$` suffix to the\n * attribute name.\n *\n * Example:\n *\n *     html`<button class$=\"primary\">Buy Now</button>`\n *\n * To set an event handler, prefix the attribute name with `on-`:\n *\n * Example:\n *\n *     html`<button on-click=${(e)=> this.onClickHandler(e)}>Buy Now</button>`\n *\n */\nexport function render(result, container) {\n    baseRender(result, container, extendedPartCallback);\n}\nexport const extendedPartCallback = (instance, templatePart, node) => {\n    if (templatePart.type === 'attribute') {\n        if (templatePart.rawName.startsWith('on-')) {\n            const eventName = templatePart.rawName.substring(3);\n            return new EventPart(instance, node, eventName);\n        }\n        if (templatePart.name.endsWith('$')) {\n            const name = templatePart.name.substring(0, templatePart.name.length - 1);\n            return new AttributePart(instance, node, name, templatePart.strings);\n        }\n        return new PropertyPart(instance, node, templatePart.rawName, templatePart.strings);\n    }\n    return defaultPartCallback(instance, templatePart, node);\n};\nexport class PropertyPart extends AttributePart {\n    setValue(values, startIndex) {\n        const s = this.strings;\n        let value;\n        if (s.length === 2 && s[0] === '' && s[s.length - 1] === '') {\n            // An expression that occupies the whole attribute value will leave\n            // leading and trailing empty strings.\n            value = getValue(this, values[startIndex]);\n        }\n        else {\n            // Interpolation, so interpolate\n            value = '';\n            for (let i = 0; i < s.length; i++) {\n                value += s[i];\n                if (i < s.length - 1) {\n                    value += getValue(this, values[startIndex + i]);\n                }\n            }\n        }\n        this.element[this.name] = value;\n    }\n}\nexport class EventPart {\n    constructor(instance, element, eventName) {\n        this.instance = instance;\n        this.element = element;\n        this.eventName = eventName;\n    }\n    setValue(value) {\n        const listener = getValue(this, value);\n        if (listener === this._listener) {\n            return;\n        }\n        if (listener == null) {\n            this.element.removeEventListener(this.eventName, this);\n        }\n        else if (this._listener == null) {\n            this.element.addEventListener(this.eventName, this);\n        }\n        this._listener = listener;\n    }\n    handleEvent(event) {\n        if (typeof this._listener === 'function') {\n            this._listener.call(this.element, event);\n        }\n        else if (typeof this._listener.handleEvent === 'function') {\n            this._listener.handleEvent(event);\n        }\n    }\n}\n//# sourceMappingURL=lit-extended.js.map","import { render as renderFn, html } from 'lit-html/lib/lit-extended.js';\nimport BaseCustomElement from '../index.js';\n\n/**\n * html(template)\n * *** @param {object} template literal which needs to be wired\n *\n * renderFn((template, renderRoot)\n * *** @param {object} template literal that needs to be rendered\n * *** @param {*} renderRoot defines where to render\n */\nexport { html, renderFn };\n\n/**\n * HOC which uses litHtml underneath to render custome elements\n */\nclass BaseCustomElementWithLitHTML extends BaseCustomElement {\n    get domRender() {\n        return (...args) => renderFn(html(...args), this.renderRoot);\n    }\n\n    get html() { return html; }\n}\n\nexport default BaseCustomElementWithLitHTML;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n","import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports['default'] = symbolObservablePonyfill;\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar _Symbol = root.Symbol;\n\n\tif (typeof _Symbol === 'function') {\n\t\tif (_Symbol.observable) {\n\t\t\tresult = _Symbol.observable;\n\t\t} else {\n\t\t\tresult = _Symbol('observable');\n\t\t\t_Symbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ponyfill = require('./ponyfill.js');\n\nvar _ponyfill2 = _interopRequireDefault(_ponyfill);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar root; /* global window */\n\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = (0, _ponyfill2['default'])(root);\nexports['default'] = result;","module.exports = require('./lib/index');\n","import isPlainObject from 'lodash-es/isPlainObject';\nimport $$observable from 'symbol-observable';\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nexport var ActionTypes = {\n  INIT: '@@redux/INIT'\n\n  /**\n   * Creates a Redux store that holds the state tree.\n   * The only way to change the data in the store is to call `dispatch()` on it.\n   *\n   * There should only be a single store in your app. To specify how different\n   * parts of the state tree respond to actions, you may combine several reducers\n   * into a single reducer function by using `combineReducers`.\n   *\n   * @param {Function} reducer A function that returns the next state tree, given\n   * the current state tree and the action to handle.\n   *\n   * @param {any} [preloadedState] The initial state. You may optionally specify it\n   * to hydrate the state from the server in universal apps, or to restore a\n   * previously serialized user session.\n   * If you use `combineReducers` to produce the root reducer function, this must be\n   * an object with the same shape as `combineReducers` keys.\n   *\n   * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n   * to enhance the store with third-party capabilities such as middleware,\n   * time travel, persistence, etc. The only store enhancer that ships with Redux\n   * is `applyMiddleware()`.\n   *\n   * @returns {Store} A Redux store that lets you read the state, dispatch actions\n   * and subscribe to changes.\n   */\n};export default function createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n  function getState() {\n    return currentState;\n  }\n\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected listener to be a function.');\n    }\n\n    var isSubscribed = true;\n\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      isSubscribed = false;\n\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer;\n    dispatch({ type: ActionTypes.INIT });\n  }\n\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object') {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return { unsubscribe: unsubscribe };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  }\n\n  // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n  dispatch({ type: ActionTypes.INIT });\n\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}","/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nexport default function warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n    /* eslint-disable no-empty */\n  } catch (e) {}\n  /* eslint-enable no-empty */\n}","import { ActionTypes } from './createStore';\nimport isPlainObject from 'lodash-es/isPlainObject';\nimport warning from './utils/warning';\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionName = actionType && '\"' + actionType.toString() + '\"' || 'an action';\n\n  return 'Given action ' + actionName + ', reducer \"' + key + '\" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return 'The ' + argumentName + ' has unexpected type of \"' + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + '\". Expected argument to be an object with the following ' + ('keys: \"' + reducerKeys.join('\", \"') + '\"');\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n\n  if (unexpectedKeys.length > 0) {\n    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('\"' + unexpectedKeys.join('\", \"') + '\" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('\"' + reducerKeys.join('\", \"') + '\". Unexpected keys will be ignored.');\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, { type: ActionTypes.INIT });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');\n    }\n\n    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');\n    if (typeof reducer(undefined, { type: type }) === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined when probed with a random type. ' + ('Don\\'t try to handle ' + ActionTypes.INIT + ' or other actions in \"redux/*\" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');\n    }\n  });\n}\n\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\nexport default function combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning('No reducer provided for key \"' + key + '\"');\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n  var finalReducerKeys = Object.keys(finalReducers);\n\n  var unexpectedKeyCache = void 0;\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError = void 0;\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments[1];\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}","function bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(undefined, arguments));\n  };\n}\n\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass a single function as the first argument,\n * and get a function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\nexport default function bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');\n  }\n\n  var keys = Object.keys(actionCreators);\n  var boundActionCreators = {};\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var actionCreator = actionCreators[key];\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n  return boundActionCreators;\n}","/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\n\nexport default function compose() {\n  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(undefined, arguments));\n    };\n  });\n}","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport compose from './compose';\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\nexport default function applyMiddleware() {\n  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function (reducer, preloadedState, enhancer) {\n      var store = createStore(reducer, preloadedState, enhancer);\n      var _dispatch = store.dispatch;\n      var chain = [];\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch(action) {\n          return _dispatch(action);\n        }\n      };\n      chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(undefined, chain)(store.dispatch);\n\n      return _extends({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}","import createStore from './createStore';\nimport combineReducers from './combineReducers';\nimport bindActionCreators from './bindActionCreators';\nimport applyMiddleware from './applyMiddleware';\nimport compose from './compose';\nimport warning from './utils/warning';\n\n/*\n* This is a dummy function to check if the function name has been altered by minification.\n* If the function has been minified and NODE_ENV !== 'production', warn the user.\n*/\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \\'production\\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { createStore, combineReducers, bindActionCreators, applyMiddleware, compose };","\"use strict\";\n\nvar compose = require('redux').compose;\n\nexports.__esModule = true;\nexports.composeWithDevTools = (\n  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ :\n    function() {\n      if (arguments.length === 0) return undefined;\n      if (typeof arguments[0] === 'object') return compose;\n      return compose.apply(null, arguments);\n    }\n);\n\nexports.devToolsEnhancer = (\n  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION__ :\n    function() { return function(noop) { return noop; } }\n);\n","/**\n * simplyfied event handler function, this allows to bind this context\n * also to avoid rendendant duplicate code for bind\n * @param {object} target HTML element that needs event to be added\n * @param {string} eventName event type ex: click, blur, etc.\n * @param {Function} callbackFunc callback function that needs to be triggerd\n * @param {object} context bind context\n */\nexport function on(eventName, target, callbackFunc, context) {\n    const bindContext = context || target;\n    target.addEventListener(eventName, callbackFunc.bind(bindContext), false);\n}\n\n/**\n * simplyfied event handler function to remove events\n * @param {object} target HTML element that needs event to be added\n * @param {string} eventName event type ex: click, blur, etc.\n * @param {Function} callbackFunc callback function that needs to be triggerd\n */\nexport function off(eventName, target, callbackFunc) {\n    target.removeEventListener(eventName, callbackFunc, false);\n}\n\n/**\n * trigger native/custom event and pass data between components\n * @param {object} target element reference on which event needs to be triggerd\n * @param {string} eventName custom event name\n * @param {object} eventData custom event data to share\n */\nexport function trigger(eventName, target, eventData) {\n    const triggerEvent = (!eventData) ? new Event(eventName) : new CustomEvent(eventName, { detail: eventData || {} });\n    target.dispatchEvent(triggerEvent);\n}\n\nexport default { on, off, trigger };\n","import { createStore, combineReducers } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\nimport { trigger } from 'baseui-wc-utils/src/dom/event-handlers';\nimport { BaseUICustomElement } from '../index';\n\nconst stores = {};\n\nclass PageStore extends BaseUICustomElement {\n    static get is() { return { name: 'page-store' }; }\n\n    static reduceReducers(...reducers) {\n        return (prv, cur) => reducers.reduce((p, r) => r(p, cur), prv);\n    }\n\n    didConnected() {\n        this.rootReducer = (s = {}) => s;\n        this.storeName   = 'PAGE_STORE';\n        this.asyncReducers = {};\n\n        this.onStateChanage     = this.onStateChanage.bind(this);\n        this.createReducer      = this.createReducer.bind(this);\n        this.injectAsyncReducer = this.injectAsyncReducer.bind(this);\n\n        this.initiateStore();\n\n        // notify store ready\n        this.onStoreReady();\n\n        // attach store listener\n        const { storeName, onStateChanage } = this;\n\n        if (!stores[storeName]) return;\n\n        this.unsubscribe = stores[storeName].store.subscribe(onStateChanage);\n    }\n\n    onStoreReady() {\n        trigger('storeready', this, { store: this.getStore() });\n    }\n\n    onStateChanage() {\n        trigger('statechange', this, { state: this.getState() });\n    }\n\n    initiateStore(initialState = {}) {\n        const { storeName, createReducer } = this;\n\n        if (stores[storeName]) return;\n\n        stores[storeName] = {\n            store: createStore(createReducer(), initialState, devToolsEnhancer())\n        };\n\n        // add injectAsyncReducer to the store API\n        stores[storeName].store = {\n            ...stores[storeName].store,\n            injectAsyncReducer: this.injectAsyncReducer\n        };\n    }\n\n    createReducer(asyncReducers = {}) {\n        const { rootReducer } = this;\n        return combineReducers({ rootReducer, ...asyncReducers });\n    }\n\n    injectAsyncReducer(defaultStore, name, asyncReducer) {\n        this.asyncReducers[name] = asyncReducer; // eslint-disable-line\n        defaultStore.replaceReducer(this.createReducer(this.asyncReducers));\n    }\n\n    getState() {\n        return stores[this.storeName].store.getState();\n    }\n\n    getStore() {\n        return stores[this.storeName].store;\n    }\n\n    /* clean up events and store change listeners (if any) */\n    disconnectedCallback() {\n        this.unsubscribe();\n    }\n}\n\nwindow.customElements.define(PageStore.is.name, PageStore);\n\nexport default PageStore;\n","export default function (reason) {\n    const newErr = new Error(reason);\n\n    return (e) => {\n        newErr.originalError = e;\n        throw newErr;\n    };\n}\n"],"names":["HTMLCustomElement","_","init","HTMLElement","toCamelCase","word","replace","s","f","c","toUpperCase","BootstrapElement","superclass","name","classProto","Object","getPrototypeOf","this","propName","defineProperty","attrName","value","isObjOrArray","test","hasOrIsBooleanAttr","updatedValue","JSON","parse","e","error","serializeAttrValue","getAttribute","checkedValue","stringify","setAttribute","attributes","observedAttributes","keys","forEach","attr","defineProp","length","bind","observedProps","prop","isFirstRender","_beforeRender","hasAttribute","val","removeAttribute","Component","lazyGetter","type","fn","secret","[object Object]","call","configurable","intents","hasOwnProperty","object","callback","i","key","G","document","defaultView","ELEMENT_NODE","OWNER_SVG_ELEMENT","SVG_NAMESPACE","CONNECTED","DISCONNECTED","SHOULD_USE_TEXT_CONTENT","UID","Math","random","Date","UIDC","Event","o_O","createEvent","initEvent","Map","values","get","obj","indexOf","push","WeakMap","WeakSet","wm","set","has","isArray","Array","toString","arr","trim","create","node","doc","createElement","ownerDocument","fragment","createDocumentFragment","text","createTextNode","testFragment","hasAppend","hasContent","appendChild","hasDoomedCloneNode","cloneNode","childNodes","hasImportNode","append","apply","no","RegExp","findAttributes","comments","$0","$1","$2","$3","replaceAttributes","createFragment","html","SVGFragment","HTMLFragment","clone","importNode","slice","unique","template","TL","propertyIsEnumerable","navigator","userAgent","parseFloat","templateObjects","join","container","innerHTML","content","selector","querySelectorAll","createElementNS","firstChild","Wire","first","last","prototype","insert","df","remove","parentNode","removeChild","range","createRange","setStartBefore","setEndAfter","deleteContents","prepend","path","parent","unshift","nodeType","ownerElement","createPath","IS_NON_DIMENSIONAL","update","style","isSVG","oldType","oldValue","newValue","cssText","info","toStyle","hyphen","ized","toLowerCase","css","identity","O","domdiff","currentNodes","futureNodes","getNode","beforeNode","before","currentStart","futureStart","currentEnd","currentStartNode","currentEndNode","futureEnd","futureStartNode","futureEndNode","insertBefore","nextSibling","index","el","pin","place","ch","components","Cache","asHTML","asNode","item","constructor","render","find","paths","parts","child","textContent","shift","nodeName","Path","cache","array","attribute","realName","len","removeAttributeNode","script","setAttributeNode","replaceChild","invokeAtDistance","placeholder","Promise","resolve","then","String","any","Intent","isPromise_ish","setAnyContent","fastPath","anyContent","concat","all","canDiff","original","Style","notObserving","dispatchAll","nodes","event","dispatchTarget","dispatchEvent","children","MutationObserver","records","record","removedNodes","addedNodes","observe","subtree","childList","addEventListener","target","add","removeEventListener","owner","setTextContent","root","updates","bewitched","templates","wicked","arguments","Updates","wires","wire","statics","setup","wireContent","weakly","id","wireNodes","defineProperties","handleEvent","ct","currentTarget","svg","state","defaultState","setState","source","BaseCustomElement","renderRoot","withShadowDom","attachShadow","mode","shadowRoot","ObservePropertyChanges","willConnect","hasInstanceMethod","_create","createAttributesToProperties","onConnect","oldVal","newVal","willRender","shouldRender","_afterRender","didConnected","didRendered","BaseCustomElementWithHyperHTML","context","_this2","envCachesTemplates","t","strings","isSvg","undefined","Template","TemplateResult","litTag","attributeMarker","textRegex","hasTagsRegex","textMarkerContent","textMarker","attrOrTextRegex","TemplatePart","rawName","element","_getHtml","walker","createTreeWalker","partIndex","nodesToRemove","previousNode","currentNode","nextNode","hasAttributes","attributeStrings","split","attributeString","substring","match","nodeValue","lastIndex","previousSibling","Text","n","l","a","isTextBinding","getValue","part","__litDirective","AttributePart","instance","size","startIndex","v","Symbol","iterator","NodePart","startNode","endNode","_previousValue","_setText","_setTemplateResult","_setIterable","Node","_setNode","_setPromise","clear","_insert","TEXT_NODE","TemplateInstance","_partCallback","_clone","itemParts","itemPart","itemStart","setValue","lastPart","defaultPartCallback","templatePart","Error","partCallback","_parts","valueIndex","svgElement","result","__templateInstance","lastChild","baseRender","extendedPartCallback","startsWith","eventName","listener","_listener","endsWith","BaseCustomElementWithLitHTML","renderFn","freeGlobal","global","freeSelf","self","Function","objectProto","nativeObjectToString","symToStringTag","toStringTag","nullTag","undefinedTag","baseGetTag","isOwn","tag","unmasked","getRawTag","func","transform","getPrototype","arg","objectTag","funcProto","funcToString","objectCtorString","isPlainObject","proto","Ctor","exports","_Symbol","observable","_ponyfill2","_ponyfill","__esModule","default","window","module","require$$0","ActionTypes","INIT","createStore","reducer","preloadedState","enhancer","_ref2","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","getState","subscribe","isSubscribed","splice","dispatch","action","listeners","replaceReducer","nextReducer","$$observable","_ref","outerSubscribe","observer","TypeError","observeState","next","unsubscribe","warning","message","console","combineReducers","reducers","reducerKeys","finalReducers","process","env","NODE_ENV","finalReducerKeys","unexpectedKeyCache","shapeAssertionError","warningMessage","inputState","argumentName","unexpectedKeys","filter","getUnexpectedStateShapeWarningMessage","actionType","hasChanged","nextState","_i","_key","previousStateForKey","nextStateForKey","errorMessage","bindActionCreator","actionCreator","compose","_len","funcs","reduce","b","_extends","assign","isCrushed","actionCreators","boundActionCreators","middlewares","chain","store","_dispatch","middlewareAPI","map","middleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","__REDUX_DEVTOOLS_EXTENSION__","noop","trigger","eventData","triggerEvent","CustomEvent","detail","stores","PageStore","BaseUICustomElement","rootReducer","storeName","asyncReducers","onStateChanage","createReducer","injectAsyncReducer","initiateStore","onStoreReady","getStore","initialState","devToolsEnhancer","defaultStore","asyncReducer","prv","cur","p","r","customElements","define","is","reason","newErr","originalError"],"mappings":"w3CAGaA,uaACGC,sFAAuBA,IAAVA,KAAcC,WAAQD,2DADZE,cCWvC,SAAgBC,EAAYC,GACxB,OAAOA,EAAKC,QAAQ,kBAAmB,CAACC,EAAGC,EAAGC,IAAMA,EAAEC,eCT1D,IAAMC,EAAmB,8IAA4BC,yCAKtCC,MACFA,OAGCC,EAAgBC,OAAOC,eADPC,MAEhBC,EAAgBd,EAAYS,GAE9BK,KAAYJ,UAETK,eAAeL,EAAYI,iBAChB,wBFN1B,SAAmCE,EAAUC,OACnCC,EAAgB,UAAWC,KAAKF,GAChCG,EAAsB,cAAeD,KAAKH,GAC5CK,eAIeC,KAAKC,MAAMN,GAC5B,MAAOO,KACUP,EAEXC,MACe,aACPO,+CAA+CT,sBAA4BC,WAKvFG,MACeA,GAGZC,EEdYK,CAAmBjB,EAAMI,KAAKc,aAAalB,kBAElDQ,OACMW,EAAiC,iBAAVX,EAAsBK,KAAKO,UAAUZ,GAASA,OACtEa,aAAarB,EAAMmB,yEAUPG,4DAAiBC,mEAEnCC,KAAKF,GAAYG,QAAQ,SAACC,OACvBnB,EAAWe,EAAWI,GAAM1B,OAC7B2B,WAAWpB,KAGc,IAA9BgB,EAAmBK,UAGJH,QAAQrB,KAAKuB,WAAWE,KAAKzB,mEAG7B0B,4DAEb7B,EAAaC,OAAOC,eADJC,QAqBRqB,QAlBc,SAACM,GACrBA,KAAQ9B,UAELK,iBAAqByB,iBACV,wBAEH3B,SAAS2B,iBAEhBvB,YACSuB,GAAUvB,EAGfJ,KAAK4B,eAA+C,mBAAvB5B,KAAK6B,oBACjCA,iDAYjBP,UACOtB,KAAK8B,aAAaR,+BAOzBA,UACOtB,KAAKc,aAAaQ,+BAQzBA,EAAMS,UACC/B,KAAKiB,aAAaK,EAAMS,kCAO5BT,UACItB,KAAKgC,gBAAgBV,aCrGpC,SAAwBW,KAmCxB,MAAMC,EAAa,CAACC,EAAMC,KACxB,MAAMC,EAAS,IAAMF,EAAO,IAC5B,OACEG,MACE,OAAOtC,KAAKqC,KAAYrC,KAAKmC,GAAQC,EAAGG,KAAKvC,KAAMmC,KAErDG,IAAIlC,GACFN,OAAOI,eAAeF,KAAMqC,GAASG,cAAc,EAAMpC,MAAAA,OC9CzDqC,KACArB,KACAsB,EAAiBD,EAAQC,eAE/B,IAAIlB,EAAS,EAEb,MAgBU,CAACmB,EAAQC,KACf,IAAK,IAAIC,EAAI,EAAGA,EAAIrB,EAAQqB,IAAK,CAC/B,IAAIC,EAAM1B,EAAKyB,GACf,GAAIH,EAAeH,KAAKI,EAAQG,GAC9B,OAAOL,EAAQK,GAAKH,EAAOG,GAAMF,KC1BlC,MAAMG,EAAIC,SAASC,YAKbC,EAAe,EAOfC,EAAoB,kBACpBC,EAAgB,6BAGhBC,EAAY,YACZC,EAAe,MAAQD,EAIvBE,EAA0B,oBAC1BC,EAFU,YAEQC,KAAKC,SAAW,IAAIC,KAAQ,GAAK,IACnDC,EAAO,UAASJ,EAAM,SCfnC,IAAIK,EAAQd,EAAEc,MACd,IACE,IAAIA,EAAM,SACV,MAAMC,GACND,EAAQ,SAAU1B,GAChB,MAAMxB,EAAIqC,SAASe,YAAY,SAE/B,OADApD,EAAEqD,UAAU7B,GAAM,GAAO,GAClBxB,GAMX,MAAasD,EAAMlB,EAAEkB,KAAO,WAC1B,MAAM7C,KAAW8C,KACjB,OACEC,IAAIC,GACKF,EAAO9C,EAAKiD,QAAQD,IAE7B9B,IAAI8B,EAAKhE,GACP8D,EAAO9C,EAAKkD,KAAKF,GAAO,GAAKhE,KAMtBmE,EAAUxB,EAAEwB,SAAW,WAClC,OACEJ,IAAIC,GAAcA,EAAIZ,GACtBlB,IAAI8B,EAAKhE,GACPN,OAAOI,eAAekE,EAAKZ,GACzBhB,cAAc,EACdpC,MAAAA,OAOKoE,EAAUzB,EAAEyB,SAAW,WAClC,MAAMC,EAAK,IAAIF,EACf,OACEjC,IAAI8B,GAAOK,EAAGC,IAAIN,GAAK,IACvBO,IAAIP,IAA8B,IAAhBK,EAAGN,IAAIC,KAKhBQ,EAAUC,MAAMD,SAAW,CAACE,GACvCC,GAA8B,mBAAvBD,EAASvC,KAAKwC,GADiB,IAEnCD,UAEQE,EAAOxB,EAAIwB,MAAQ,WAC9B,OAAOhF,KAAKX,QAAQ,aAAc,KC5DvB4F,EAAS,CAACC,EAAM/C,IAASgD,EAAID,GAAME,cAAcjD,GACjDgD,EAAMD,GAAQA,EAAKG,eAAiBH,EACpCI,EAAWJ,GAAQC,EAAID,GAAMK,yBAC7BC,EAAO,CAACN,EAAMM,IAASL,EAAID,GAAMO,eAAeD,GCFvDE,EAAeJ,EAAStC,UAGjB2C,EAAY,WAAYD,EAGxBE,EAAa,YAAaX,EAAOjC,SAAU,YAGxD0C,EAAaG,YAAYL,EAAKE,EAAc,MAC5CA,EAAaG,YAAYL,EAAKE,EAAc,KAC5C,MAAaI,EAAwE,IAAnDJ,EAAaK,WAAU,GAAMC,WAAWxE,OAM7DyE,EAAgB,eAAgBjD,SCEhCkD,EAASP,EACpB,CAACT,EAAMc,KACLd,EAAKgB,OAAOC,MAAMjB,EAAMc,IAE1B,CAACd,EAAMc,KACL,MAAMxE,EAASwE,EAAWxE,OAC1B,IAAK,IAAIqB,EAAI,EAAGA,EAAIrB,EAAQqB,IAC1BqC,EAAKW,YAAYG,EAAWnD,KAO5B1C,EAAW,mCACXiG,EAAK,IAAIC,OACb,4BACElG,EACF,oDACA,MAEImG,EAAiB,IAAID,OAAO,IAAMlG,EAAW,aAAeyD,EAAO,MAAO,MAC1E2C,EAAW,CAACC,EAAIC,EAAIC,EAAIC,IAC5BF,EAAKC,EAAGrH,QAAQiH,EAAgBM,GAAqBD,EACjDC,EAAoB,CAACJ,EAAIC,EAAIC,IAAOD,GAAMC,GAAM,KAAOlD,GAAOkD,GAAM,KAK7DG,EAAiB,CAAC3B,EAAM4B,KAClC3D,KAAqB+B,EACpB6B,GACAC,IACA9B,EAAM4B,EAAKzH,QAAQ+G,EAAIG,IAMrBR,EAAYD,EAChBZ,IACE,MAAM+B,EAAQ/B,EAAKa,YACbC,EAAad,EAAKc,eASlBxE,EAASwE,EAAWxE,OAC1B,IAAK,IAAIqB,EAAI,EAAGA,EAAIrB,EAAQqB,IAC1BoE,EAAMpB,YAAYE,EAAUC,EAAWnD,KAEzC,OAAOoE,GAST/B,GAAQA,EAAKa,WAAU,GAGZmB,EAAajB,EACxB,CAACd,EAAKD,IAASC,EAAI+B,WAAWhC,GAAM,GACpC,CAACC,EAAKD,IAASa,EAAUb,GAIdiC,MAAWA,MAWXC,GAASC,GAAYC,GAAGD,GAKrC,IAAIC,GAAKD,IACP,GAEEA,EAASE,qBAAqB,QAG5B,iBAAiBjH,MAAMyC,EAAEyE,eAAiBC,YAC1CC,WAAWrB,OAAOI,IAAM,GAE1B,CAEA,MAAMkB,KAENL,GAAKD,CAAAA,IACH,MAAMvE,EAAM,IAAMuE,EAASO,KAAKpE,GAChC,OAAOmE,EAAgB7E,KACrB6E,EAAgB7E,GAAOuE,UAM3BC,GAAKD,CAAAA,GAAYA,GAEnB,OAAOC,GAAGD,IAMZ,MAAML,GAAepB,EACnB,CAACV,EAAM4B,KACL,MAAMe,EAAY5C,EAAOC,EAAM,YAE/B,OADA2C,EAAUC,UAAYhB,EACfe,EAAUE,SAEnB,CAAC7C,EAAM4B,KACL,MAAMe,EAAY5C,EAAOC,EAAM,YACzB6C,EAAUzC,EAASJ,GACzB,GAAI,sDAAsD5E,KAAKwG,GAAO,CACpE,MAAMkB,EAAW3B,OAAOI,GACxBoB,EAAUC,UAAY,UAAYhB,EAAO,WACzCZ,EAAO6B,EAASZ,GAAM5E,KAAKsF,EAAUI,iBAAiBD,UAEtDH,EAAUC,UAAYhB,EACtBZ,EAAO6B,EAASZ,GAAM5E,KAAKsF,EAAU7B,aAEvC,OAAO+B,GAKLhB,GAAcnB,EAClB,CAACV,EAAM4B,KACL,MAAMiB,EAAUzC,EAASJ,GACnB2C,EAAY1C,EAAID,GAAMgD,gBAAgB9E,EAAe,OAG3D,OAFAyE,EAAUC,UAAYhB,EACtBZ,EAAO6B,EAASZ,GAAM5E,KAAKsF,EAAU7B,aAC9B+B,GAET,CAAC7C,EAAM4B,KACL,MAAMiB,EAAUzC,EAASJ,GACnB2C,EAAY5C,EAAOC,EAAM,OAG/B,OAFA2C,EAAUC,UAAY,eAAiB1E,EAAgB,KAAO0D,EAAO,SACrEZ,EAAO6B,EAASZ,GAAM5E,KAAKsF,EAAUM,WAAWnC,aACzC+B,GC5KI,SAASK,GAAKpC,GAC3BhG,KAAKgG,WAAaA,EAClBhG,KAAKwB,OAASwE,EAAWxE,OACzBxB,KAAKqI,MAAQrC,EAAW,GACxBhG,KAAKsI,KAAOtC,EAAWhG,KAAKwB,OAAS,GAIvC4G,GAAKG,UAAUC,OAAS,WACtB,MAAMC,EAAKnD,EAAStF,KAAKqI,OAEzB,OADAnC,EAAOuC,EAAIzI,KAAKgG,YACTyC,GAITL,GAAKG,UAAUG,OAAS,WACtB,MAAML,EAAQrI,KAAKqI,MACbC,EAAOtI,KAAKsI,KAClB,GAAoB,IAAhBtI,KAAKwB,OACP8G,EAAKK,WAAWC,YAAYN,OACvB,CACL,MAAMO,EAAQ1D,EAAIkD,GAAOS,cACzBD,EAAME,eAAe/I,KAAKgG,WAAW,IACrC6C,EAAMG,YAAYV,GAClBO,EAAMI,iBAER,OAAOZ,GCZT,MA0BMa,GAAU,CAACC,EAAMC,EAAQlE,KAC7BiE,EAAKE,QAAQF,EAAK9E,QAAQ9B,KAAK6G,EAAOpD,WAAYd,KAGpD,OACU,CAAC/C,EAAM+C,EAAMtF,MAAWuC,KAAAA,EAAMvC,KAAAA,EAAMsF,KAAAA,EAAMiE,KA/BjCjE,CAAAA,IACjB,MAAMiE,KACN,IAAIR,EACJ,OAAQzD,EAAKoE,UACX,KAAKpG,EACL,KNbkC,GMchCyF,EAAazD,EACb,MACF,KNjBwB,EMkBtByD,EAAazD,EAAKyD,WAClBO,GAAQC,EAAMR,EAAYzD,GAC1B,MACF,QACEyD,EAAazD,EAAKqE,aAGtB,IACErE,EAAOyD,EACNA,EAAaA,EAAWA,WACzBzD,EAAOyD,EAEPO,GAAQC,EAAMR,EAAYzD,GAE5B,OAAOiE,GAQiDK,CAAWtE,QAC7D,CAACA,EAAMiE,KACX,MAAM3H,EAAS2H,EAAK3H,OACpB,IAAK,IAAIqB,EAAI,EAAGA,EAAIrB,EAAQqB,IAC1BqC,EAAOA,EAAKc,WAAWmD,EAAKtG,IAE9B,OAAOqC,GCrDX,MAAMuE,GAAqB,yDAiB3B,MAAMC,GAAS,CAACC,EAAOC,KACrB,IAAIC,EAASC,EACb,OAAOC,IACL,cAAeA,GACb,IAAK,SACH,GAAIA,EAAU,CACZ,GAAgB,WAAZF,GACF,IAAKD,GACCE,IAAaC,EACf,IAAK,MAAMjH,KAAOgH,EACVhH,KAAOiH,IACXJ,EAAM7G,GAAO,SAMjB8G,EAAOD,EAAMvJ,MAAQ,GACpBuJ,EAAMK,QAAU,GAEvB,MAAMC,EAAOL,KAAaD,EAC1B,IAAK,MAAM7G,KAAOiH,EAAU,CAC1B,MAAM3J,EAAQ2J,EAASjH,GACvBmH,EAAKnH,GAAwB,iBAAV1C,GACNqJ,GAAmBnJ,KAAKwC,GACN1C,EAAhBA,EAAQ,KAEzByJ,EAAU,SACND,EAAOD,EAAMvJ,MAAQ8J,GAASJ,EAAWG,GACxCH,EAAWC,EAChB,MAEJ,QACMD,GAAYC,IACdF,EAAU,SACVC,EAAWC,EACPH,EAAOD,EAAMvJ,MAAQ2J,GAAY,GAChCJ,EAAMK,QAAUD,GAAY,OAOrCI,GAAS,oBACTC,GAAO,CAAC5D,EAAIC,EAAIC,IAAOD,EAAK,IAAMC,EAAG2D,cACrCH,GAAUvH,IACd,MAAM2H,KACN,IAAK,MAAMxH,KAAOH,EAChB2H,EAAIhG,KAAKxB,EAAIzD,QAAQ8K,GAAQC,IAAO,IAAKzH,EAAOG,GAAM,KAExD,OAAOwH,EAAI1C,KAAK,KC5DZ2C,GAAWC,GAAKA,EAEhBC,GAAU,CACd9B,EACA+B,EACAC,EACAC,EACAC,KAEA,MAAM1G,EAAMyG,GAAWL,GACjBO,EAAuB,MAAdD,EAAqB,KAAO1G,EAAI0G,EAAY,GAC3D,IAAIE,EAAe,EAAGC,EAAc,EAChCC,EAAaP,EAAalJ,OAAS,EACnC0J,EAAmBR,EAAa,GAChCS,EAAiBT,EAAaO,GAC9BG,EAAYT,EAAYnJ,OAAS,EACjC6J,EAAkBV,EAAY,GAC9BW,EAAgBX,EAAYS,GAChC,KAAOL,GAAgBE,GAAcD,GAAeI,GAClD,GAAwB,MAApBF,EACFA,EAAmBR,IAAeK,QAE/B,GAAsB,MAAlBI,EACPA,EAAiBT,IAAeO,QAE7B,GAAuB,MAAnBI,EACPA,EAAkBV,IAAcK,QAE7B,GAAqB,MAAjBM,EACPA,EAAgBX,IAAcS,QAE3B,GAAIF,GAAoBG,EAC3BH,EAAmBR,IAAeK,GAClCM,EAAkBV,IAAcK,QAE7B,GAAIG,GAAkBG,EACzBH,EAAiBT,IAAeO,GAChCK,EAAgBX,IAAcS,QAE3B,GAAIF,GAAoBI,EAC3B3C,EAAW4C,aACTpH,EAAI+G,EAAkB,GACtB/G,EAAIgH,GAAiB,GAAGK,aAE1BN,EAAmBR,IAAeK,GAClCO,EAAgBX,IAAcS,QAE3B,GAAID,GAAkBE,EACzB1C,EAAW4C,aACTpH,EAAIgH,EAAgB,GACpBhH,EAAI+G,EAAkB,IAExBC,EAAiBT,IAAeO,GAChCI,EAAkBV,IAAcK,OAE7B,CACH,IAAIS,EAAQf,EAAarG,QAAQgH,GACjC,GAAII,EAAQ,EACV9C,EAAW4C,aACTpH,EAAIkH,EAAiB,GACrBlH,EAAI+G,EAAkB,IAExBG,EAAkBV,IAAcK,OAE7B,CACH,IAAIU,EAAKhB,EAAae,GACtBf,EAAae,GAAS,KACtB9C,EAAW4C,aACTpH,EAAIuH,EAAI,GACRvH,EAAI+G,EAAkB,IAExBG,EAAkBV,IAAcK,IAItC,GAAID,EAAeE,EAAY,CAC7B,MAAMU,EAAMhB,EAAYS,EAAY,GAC9BQ,EAAe,MAAPD,EAAcxH,EAAIwH,EAAK,GAAKb,EAC1C,KAAOE,GAAeI,GAAW,CAC/B,MAAMS,EAAKlB,EAAYK,KAIb,MAANa,GAAYlD,EAAW4C,aAAapH,EAAI0H,EAAI,GAAID,SAMnD,GAAIZ,EAAcI,EACrB,KAAOL,GAAgBE,GAAY,CACjC,MAAMY,EAAKnB,EAAaK,KACd,MAANc,GAAYlD,EAAWC,YAAYzE,EAAI0H,GAAK,IAGpD,OAAOlB,GClFHmB,GAAa,IAAItH,EAIvB,SAASuH,MACTA,GAAMxD,UAAYzI,OAAOmF,OAAO,MAGhC,MAAM+G,GAASlF,KAAUA,KAAAA,IAGnBmF,GAAS,CAACC,EAAMrJ,IACb,iBAAkBqJ,EACvBA,EACCA,EAAKC,cAAgB/D,GAKlB,EAAIvF,EAAK,EACRA,EAAIqJ,EAAKxD,SAAWwD,EAAK5D,KACzBzF,EAAIqJ,EAAK1D,SAAW0D,EAAK7D,MAC5B4D,GAAOC,EAAKE,SAAUvJ,GA4CtBwJ,GAAO,CAACnH,EAAMoH,EAAOC,KACzB,MAAMvG,EAAad,EAAKc,WAClBxE,EAASwE,EAAWxE,OAC1B,IAAK,IAAIqB,EAAI,EAAGA,EAAIrB,EAAQqB,IAAK,CAC/B,IAAI2J,EAAQxG,EAAWnD,GACvB,OAAQ2J,EAAMlD,UACZ,KAAKpG,EACHoD,GAAekG,EAAOF,EAAOC,GAC7BF,GAAKG,EAAOF,EAAOC,GACnB,MACF,KT1FsB,ES2FhBC,EAAMC,cAAgBjJ,IACxB+I,EAAMG,QACNJ,EAAMhI,KAIJf,EAAwBjD,KAAK4E,EAAKyH,UAChCC,GAAY,OAAQ1H,GACpB0H,GAAY,MAAOJ,KAGzB,MACF,KTxGmB,ES+GfjJ,EAAwBjD,KAAK4E,EAAKyH,WAClC3H,EAAKzC,KAAKiK,EAAMC,eAAiB7I,IAEjC2I,EAAMG,QACNJ,EAAMhI,KAAKsI,GAAY,OAAQ1H,QAgBnCoB,GAAiB,CAACpB,EAAMoH,EAAOC,KACnC,MAAMM,EAAQ,IAAId,GACZ7K,EAAagE,EAAKhE,WAClB4L,EAAQ3F,GAAM5E,KAAKrB,GACnBwH,KACAlH,EAASsL,EAAMtL,OACrB,IAAK,IAAIqB,EAAI,EAAGA,EAAIrB,EAAQqB,IAAK,CAC/B,MAAMkK,EAAYD,EAAMjK,GACxB,GAAIkK,EAAU3M,QAAUoD,EAAK,CAC3B,MAAM5D,EAAOmN,EAAUnN,KAIvB,KAAMA,KAAQiN,GAAQ,CACpB,MAAMG,EAAWT,EAAMG,QAAQrN,QAAQ,gCAAiC,MACxEwN,EAAMjN,GAAQsB,EAAW8L,IAIX9L,EAAW8L,EAAS3C,eAClCiC,EAAMhI,KAAKsI,GAAY,OAAQC,EAAMjN,GAAOoN,IAE9CtE,EAAOpE,KAAKyI,IAGhB,MAAME,EAAMvE,EAAOlH,OACnB,IAAK,IAAIqB,EAAI,EAAGA,EAAIoK,EAAKpK,IACvBqC,EAAKgI,oBAAoBxE,EAAO7F,IASlC,MAAM8J,EAAWzH,EAAKyH,SACtB,GAAI,YAAYrM,KAAKqM,GAAW,CAC9B,MAAMQ,EAAS/H,EAAcF,EAAMyH,GACnC,IAAK,IAAI9J,EAAI,EAAGA,EAAI3B,EAAWM,OAAQqB,IACrCsK,EAAOC,iBAAiBlM,EAAW2B,GAAGkD,WAAU,IAElDoH,EAAOV,YAAcvH,EAAKuH,YAC1BvH,EAAKyD,WAAW0E,aAAaF,EAAQjI,KAQnCoI,GAAmB,CAAClN,EAAOwC,KAC/BA,EAASxC,EAAMmN,aACX,SAAUnN,EACZoN,QAAQC,QAAQrN,EAAMoF,MAAMkI,KAAKC,QAAQD,KAAK9K,GACrC,QAASxC,EAClBoN,QAAQC,QAAQrN,EAAMwN,KAAKF,KAAK9K,GACvB,SAAUxC,EACnBoN,QAAQC,QAAQrN,EAAM0G,MAAM4G,KAAK1B,IAAQ0B,KAAK9K,GAE9C4K,QAAQC,QAAQI,EAAczN,EAAOwC,IAAW8K,KAAK9K,IAKnDkL,GAAgB1N,GAAkB,MAATA,GAAiB,SAAUA,EAWpD2N,GAAgB,CAAC7I,EAAMc,KAC3B,IACI8D,EADAkE,GAAW,EAEf,MAAMC,EAAa7N,IACjB,cAAeA,GACb,IAAK,SACL,IAAK,SACL,IAAK,UACC4N,EACElE,IAAa1J,IACf0J,EAAW1J,EACX4F,EAAW,GAAGyG,YAAcrM,IAG9B4N,GAAW,EACXlE,EAAW1J,EACX4F,EAAayE,GACXvF,EAAKyD,WACL3C,GACCR,EAAKN,EAAM9E,IACZ6L,GACA/G,IAGJ,MACF,IAAK,SACL,IAAK,YACH,GAAa,MAAT9E,EAAe,CACjB4N,GAAW,EACXhI,EAAayE,GACXvF,EAAKyD,WACL3C,KAEAiG,GACA/G,GAEF,MAEJ,QAGE,GAFA8I,GAAW,EACXlE,EAAW1J,EACPwE,EAAQxE,GACV,GAAqB,IAAjBA,EAAMoB,OACJwE,EAAWxE,SACbwE,EAAayE,GACXvF,EAAKyD,WACL3C,KAEAiG,GACA/G,SAIJ,cAAe9E,EAAM,IACnB,IAAK,SACL,IAAK,SACL,IAAK,UACH6N,GAAYnH,KAAM1G,IAClB,MACF,IAAK,SAIH,GAHIwE,EAAQxE,EAAM,MAChBA,EAAQA,EAAM8N,OAAO/H,SAAU/F,IAE7B0N,GAAc1N,EAAM,IAAK,CAC3BoN,QAAQW,IAAI/N,GAAOsN,KAAKO,GACxB,MAEJ,QACEjI,EAAayE,GACXvF,EAAKyD,WACL3C,EACA5F,EACA6L,GACA/G,OA/OF9E,CAAAA,GAAU,iBAAkBA,GAC5CA,aAAiBgI,IACjBhI,aAAiB6B,EAkPEmM,CAAQhO,GACjB4F,EAAayE,GACXvF,EAAKyD,WACL3C,ET9R0B,KS+R1B5F,EAAMkJ,SACJnC,GAAM5E,KAAKnC,EAAM4F,aAChB5F,GACH6L,GACA/G,GAEO4I,GAAc1N,GACvBA,EAAMsN,KAAKO,GACF,gBAAiB7N,EAC1BkN,GAAiBlN,EAAO6N,GACf,SAAU7N,EACnB6N,EAAWN,OAAOvN,EAAMoF,OACf,QAASpF,EAClB6N,EAAW7N,EAAMwN,KACR,SAAUxN,EACnB4F,EAAayE,GACXvF,EAAKyD,WACL3C,EACAmB,GAAM5E,KACJsE,EACE3B,KACGgJ,OAAO9N,EAAM0G,MAAMc,KAAK,KAC3B5B,YAEJiG,GACA/G,GAGF+I,EADS,WAAY7N,EACV+G,GAAM5E,KAAKnC,GAEXyN,EAAczN,EAAO6N,MAKxC,OAAOA,GAUHhN,GAAe,CAACiE,EAAMtF,EAAMyO,KAChC,MAAMzE,EAAQzG,KAAqB+B,EACnC,IAAI4E,EAGJ,GAAa,UAATlK,EACF,MFtVW,EAACsF,EAAMmJ,EAAUzE,KAC9B,GAAIA,EAAO,CACT,MAAMD,EAAQ0E,EAAStI,WAAU,GAGjC,OAFA4D,EAAMvJ,MAAQ,GACd8E,EAAKkI,iBAAiBzD,GACfD,GAAOC,EAAOC,GAEvB,OAAOF,GAAOxE,EAAKyE,MAAOC,IE+UjB0E,CAAMpJ,EAAMmJ,EAAUzE,GAI1B,GAAI,MAAMtJ,KAAKV,GAAO,CACzB,IAAIuC,EAAOvC,EAAKuH,MAAM,GAWtB,OAVIhF,IAASkB,GAAalB,IAASmB,GAC7BiL,KACFA,IAAe,EAoGvB,WAQE,MAAMC,EAAc,CAACC,EAAOtM,KAC1B,MAAMuM,EAAQ,IAAI7K,EAAM1B,GAClBX,EAASiN,EAAMjN,OACrB,IAAK,IAAIqB,EAAI,EAAGA,EAAIrB,EAAQqB,IAAK,CAC/B,IAAIqC,EAAOuJ,EAAM5L,GACbqC,EAAKoE,WAAapG,GACpByL,EAAezJ,EAAMwJ,KAOrBC,EAAiB,CAACzJ,EAAMwJ,KAC5B,GAAI5C,GAAWnH,IAAIO,GACjBA,EAAK0J,cAAcF,OACd,CACL,MAAMG,EAAW3J,EAAK2J,SAChBrN,EAASqN,EAASrN,OACxB,IAAK,IAAIqB,EAAI,EAAGA,EAAIrB,EAAQqB,IAC1B8L,EAAeE,EAAShM,GAAI6L,KAQlC,IACE,IAAKI,iBAAiBC,IACpB,MAAMvN,EAASuN,EAAQvN,OACvB,IAAK,IAAIqB,EAAI,EAAGA,EAAIrB,EAAQqB,IAAK,CAC/B,IAAImM,EAASD,EAAQlM,GACrB2L,EAAYQ,EAAOC,aAAc3L,GACjCkL,EAAYQ,EAAOE,WAAY7L,MAE/B8L,QAAQnM,UAAWoM,SAAS,EAAMC,WAAW,IACjD,MAAMvL,GACNd,SAASsM,iBAAiB,iBAAkBZ,IAC1CF,GAAaE,EAAMa,QAASjM,KAC3B,GACHN,SAASsM,iBAAiB,kBAAmBZ,IAC3CF,GAAaE,EAAMa,QAASlM,KAC3B,IAtJC8L,IAEFrD,GAAW0D,IAAItK,IAERtF,EAAKyK,gBAAiBnF,IAC7B/C,EAAOA,EAAKkI,eAEPN,IACDD,IAAaC,IACXD,GAAU5E,EAAKuK,oBAAoBtN,EAAM2H,GAAU,GACvDA,EAAWC,EACPA,GAAU7E,EAAKoK,iBAAiBnN,EAAM4H,GAAU,KAOrD,GAAa,SAATnK,IAAqBgK,GAAShK,KAAQsF,EAC7C,OAAO6E,IACDD,IAAaC,IACfD,EAAWC,EACP7E,EAAKtF,KAAUmK,IACjB7E,EAAKtF,GAAQmK,EACG,MAAZA,GACF7E,EAAKlD,gBAAgBpC,MAQ1B,CACH,IAAI8P,GAAQ,EACZ,MAAM3C,EAAYsB,EAAStI,WAAU,GACrC,OAAOgE,IACDD,IAAaC,IACfD,EAAWC,EACPgD,EAAU3M,QAAU2J,IACN,MAAZA,GACE2F,IACFA,GAAQ,EACRxK,EAAKgI,oBAAoBH,IAE3BA,EAAU3M,MAAQ2J,IAElBgD,EAAU3M,MAAQ2J,EACb2F,IACHA,GAAQ,EACRxK,EAAKkI,iBAAiBL,UAa9B4C,GAAiBzK,IACrB,IAAI4E,EACJ,MAAM2C,EAAcrM,IACd0J,IAAa1J,IACf0J,EAAW1J,EACU,iBAAVA,GAAsBA,EAC3B0N,GAAc1N,GAChBA,EAAMsN,KAAKjB,GACF,gBAAiBrM,EAC1BkN,GAAiBlN,EAAOqM,GAExBA,EADS,SAAUrM,EACPuN,OAAOvN,EAAMoF,MAChB,QAASpF,EACNA,EAAMwN,IACT,SAAUxN,KACJ8N,OAAO9N,EAAM0G,MAAMc,KAAK,IAC9B,WAAYxH,EACT+G,GAAM5E,KAAKnC,GAAOwH,KAAK,IAEvBiG,EAAczN,EAAOqM,IAGnCvH,EAAKuH,YAAuB,MAATrM,EAAgB,GAAKA,IAI9C,OAAOqM,GAGT,eArYe,CAACmD,EAAMtD,KACpB,MAAMuD,KACArO,EAAS8K,EAAM9K,OACrB,IAAK,IAAIqB,EAAI,EAAGA,EAAIrB,EAAQqB,IAAK,CAC/B,MAAMoH,EAAOqC,EAAMzJ,GACbqC,EAAO0H,GAAUgD,EAAM3F,EAAKd,MAClC,OAAQc,EAAK9H,MACX,IAAK,MACH0N,EAAQvL,KAAKyJ,GAAc7I,OAC3B,MACF,IAAK,OACH2K,EAAQvL,KAAKrD,GAAaiE,EAAM+E,EAAKrK,KAAMqK,EAAK/E,OAChD,MACF,IAAK,OACH2K,EAAQvL,KAAKqL,GAAezK,KAIlC,OAAO2K,GAmXexD,KAAAA,IAMxB,IAAIkC,IAAe,EC3bnB,MAAMuB,GAAY,IAAIvL,EAKhBwL,GAAY,IAAI9L,EAMtB,SAASmI,GAAO/E,GACd,MAAM2I,EAASF,GAAU3L,IAAInE,MAM7B,OALIgQ,GAAUA,EAAO3I,WAAaD,GAAOC,GACvCqC,GAAOvD,MAAM6J,EAAOH,QAASI,WAWjC,SAAiB5I,GACfA,EAAWD,GAAOC,GAClB,MAAM4C,EAAQ8F,GAAU5L,IAAIkD,IAsB9B,SAAwBA,GACtB,MAAMiF,KACAhH,EAAWuB,EAAe7G,KAAMqH,EAASO,KAAKhE,IACpDsM,GAAQ7D,KAAK/G,EAAUgH,EAAOjF,EAASF,SACvC,MAAM8C,GAAQ3E,SAAAA,EAAUgH,MAAAA,GAExB,OADAyD,GAAUrL,IAAI2C,EAAU4C,GACjBA,GA3BsB1H,KAAKvC,KAAMqH,GAClC/B,EAAW4B,EAAWlH,KAAKqF,cAAe4E,EAAK3E,UAC/CuK,EAAUK,GAAQjL,OAAOK,EAAU2E,EAAKqC,OAC9CwD,GAAUpL,IAAI1E,MAAOqH,SAAAA,EAAUwI,QAAAA,IAC/BnG,GAAOvD,MAAM0J,EAASI,WACtBjQ,KAAKyM,YAAc,GACnBzM,KAAK6F,YAAYP,IAlBPa,MAAMnG,KAAMiQ,WAEfjQ,KAoBT,SAAS0J,KACP,MAAMlI,EAASyO,UAAUzO,OACzB,IAAK,IAAIqB,EAAI,EAAGA,EAAIrB,EAAQqB,IAC1B7C,KAAK6C,EAAI,GAAGoN,UAAUpN,IC5C1B,MAAMsN,GAAQ,IAAI5L,EAqBZwD,GAAU5F,IACd,IAAIiO,EAAMvI,EAAWE,EAASV,EAAUwI,EACxC,OAAO,SAAUQ,GACfA,EAAUjJ,GAAOiJ,GACjB,IAAIC,EAAQjJ,IAAagJ,EAgBzB,OAfIC,IACFjJ,EAAWgJ,EACXtI,EAAUzC,EAAStC,UACnB6E,EAAqB,QAAT1F,EACVa,SAASkF,gBAAgB9E,EAAe,OACxC2E,EACF8H,EAAUzD,GAAO3K,KAAKoG,IAExBgI,EAAQ1J,MAAM,KAAM8J,WAChBK,IACW,QAATnO,GACF+D,EAAO6B,EAASZ,GAAM5E,KAAKsF,EAAU7B,aAEvCoK,EAAOG,GAAYxI,IAEdqI,IAOLI,GAAS,CAACpM,EAAKjC,KACnB,MAAMU,EAAIV,EAAKkC,QAAQ,KACvB,IAAI+L,EAAOD,GAAMhM,IAAIC,GACjBqM,EAAKtO,EAMT,OALK,EAAIU,IACP4N,EAAKtO,EAAKgF,MAAMtE,EAAI,GACpBV,EAAOA,EAAKgF,MAAM,EAAGtE,IAAM,QAExBuN,GAAMD,GAAMzL,IAAIN,EAAKgM,MACnBA,EAAKK,KAAQL,EAAKK,GAAM1I,GAAQ5F,KAanCoO,GAAcrL,IAClB,MAAMc,EAAad,EAAKc,WAClBxE,EAASwE,EAAWxE,OACpBkP,KACN,IAAK,IAAI7N,EAAI,EAAGA,EAAIrB,EAAQqB,IAAK,CAC/B,IAAI2J,EAAQxG,EAAWnD,GAErB2J,EAAMlD,WAAapG,GACqB,IAAxC8B,EAAKzC,KAAKiK,EAAMC,aAAajL,QAE7BkP,EAAUpM,KAAKkI,GAGnB,OAA4B,IAArBkE,EAAUlP,OAAekP,EAAU,GAAK,IAAItI,GAAKsI,IbjF1D,IAAsB3I,GAAAA,GcchBA,GdbJjI,OAAO6Q,iBACL1O,EAAUsG,WAERqI,aAActO,MAAM3B,GAClB,MAAMkQ,EAAKlQ,EAAEmQ,cACb9Q,KACG,iBAAkB6Q,GAAMA,EAAG/P,aAAa,cACxC,KAAOH,EAAEwB,MACVxB,KAEJmG,KAAM5E,EAAW,OAAQ6F,IACzBgJ,IAAK7O,EAAW,MAAO6F,IACvBiJ,MAAO9O,EAAW,QAAS,WAAc,OAAOlC,KAAKiR,eACrDA,cAAe9M,IAAG,UAClB+M,UAAW5O,MAAM0O,GACf,MAAMzB,EAASvP,KAAKgR,MACdG,EAA0B,mBAAVH,EAAuBA,EAAMzO,KAAKvC,KAAMuP,GAAUyB,EACxE,IAAK,MAAMlO,KAAOqO,EAAQ5B,EAAOzM,GAAOqO,EAAOrO,GAC/C9C,KAAKoM,iBehBPgF,wKAIOxP,eAAgB,OAChByP,WAAarR,KAEdA,KAAKmM,YAAYmF,qBACZC,cAAeC,KAAM,cACrBH,WAAarR,KAAKyR,gBAInB/P,EAAkB1B,KAAKmM,YAAvBzK,cACJA,GAAe1B,KAAK0R,uBAAuBhQ,QAE1CiQ,kDAGGhR,OACFiR,OAAyBjR,EAAEwB,KAC5BnC,KAAK4R,IAA0D,mBAA5B5R,KAAK4R,SAExCA,GAAmBjR,oDAInBkR,gDAKG3Q,EAAuBlB,KAAvBkB,WACAC,EAAuBnB,KAAKmM,YAA5BhL,wBACH2Q,6BAA6B5Q,EAAYC,QAEzC4Q,iBACAlQ,qBACA6C,IAAI,WAAY,qDAGAvE,EAAU6R,EAAQC,GAClCD,GAAUA,IAAWC,SAET9S,EAAYgB,IACZ8R,OAEZpQ,4EAKAqQ,cAEDlS,KAAKmS,mBACJA,cAAe,UAWZ1E,UAAUC,KATG,aACZyE,cAAe,IAEfzN,IAAI,eAAgB,MACpB0H,WACAgG,yDAQLpS,KAAK4B,qBACAA,eAAgB,OAChByQ,qBAGJ3J,OAAO,qBACP4J,gSA3E2B,SADR5S,EAAiBX,ICNpC+H,GAAO,iBHYP,EAAC1C,EAAKjC,IAAgB,MAAPiC,EAC1B2D,GAAQ5F,GAAQ,QAChBqO,GAAOpM,EAAKjC,GAAQ,QGdWiO,4BAY3BmC,8HAAuCnB,2DAE9B,iBFTFoB,CAAAA,GAAWpG,GAAO3K,KAAK+Q,GESR/Q,CAAKgR,EAAKpB,yEAGdvK,YCJxB,MAAM4L,GAAqB,CAAEC,GAAMA,KAAQA,IAAhB,CAAqB,IAAQrT,GAAMA,KAIxDyQ,GAAY,IAAI9L,IAMT6C,GAAO,CAAC8L,KAAY1O,KAMjC,SAAgB0O,EAAS1O,EAAQ6L,EAAW8C,GACxC,MAAM/P,EAAM4P,GACRE,EACAA,EAAQhL,KAAK,iCACjB,IAAIP,EAAW0I,EAAU5L,IAAIrB,QACZgQ,IAAbzL,IACAA,EAAW,IAAI0L,GAASH,EAASC,GACjC9C,EAAUrL,IAAI5B,EAAKuE,IAEvB,OAAO,IAAI2L,GAAe3L,EAAUnD,IAfI+O,CAAOL,EAAS1O,EAAQ6L,IAAW,SAqBlEiD,GACT1Q,YAAY+E,EAAUnD,GAClBlE,KAAKqH,SAAWA,EAChBrH,KAAKkE,OAASA,GAgCtB,MAAMgP,YAA2BzP,KAAKC,aAQhCyP,GAAY,UACZC,GAAe,QACfC,GAAoB,eACpBC,aAAoBD,WACpBE,GAAkB,IAAIlN,UAAU6M,MAAmBI,YAiB5CE,GACTlR,YAAYH,EAAMsJ,EAAO7L,EAAM6T,EAASb,GACpC5S,KAAKmC,KAAOA,EACZnC,KAAKyL,MAAQA,EACbzL,KAAKJ,KAAOA,EACZI,KAAKyT,QAAUA,EACfzT,KAAK4S,QAAUA,SAGVG,GACTzQ,YAAYsQ,EAAS7B,GAAM,GACvB/Q,KAAKuM,SACLvM,KAAK+Q,IAAMA,EACX/Q,KAAK0T,QAAU1Q,SAASoC,cAAc,YACtCpF,KAAK0T,QAAQ5L,UAAY9H,KAAK2T,SAASf,EAAS7B,GAEhD,MAAM6C,EAAS5Q,SAAS6Q,iBAAiB7T,KAAK0T,QAAQ3L,QAAS,IAC/B,MAAM,GACtC,IAAI0D,GAAS,EACTqI,EAAY,EAChB,MAAMC,KAGN,IAAIC,EAEAC,EACJ,KAAOL,EAAOM,YAAY,CACtBzI,IACAuI,EAAeC,EACf,MAAM/O,EAAO+O,EAAcL,EAAOK,YAClC,GAAsB,IAAlB/O,EAAKoE,SAAwC,CAC7C,IAAKpE,EAAKiP,gBACN,SAEJ,MAAMjT,EAAagE,EAAKhE,WACxB,IAAK,IAAI2B,EAAI,EAAGA,EAAI3B,EAAWM,OAAQqB,IAAK,CACxC,MAAMkK,EAAY7L,EAAWgL,KAAKrJ,GAC5BuR,EAAmBrH,EAAU3M,MAAMiU,MAAMd,IAC/C,GAAIa,EAAiB5S,OAAS,EAAG,CAG7B,MAAM8S,EAAkB1B,EAAQkB,GAI1BL,EAFgBa,EAAgBC,UAAU,EAAGD,EAAgB9S,OAAS4S,EAAiB,GAAG5S,QAElEgT,MAAM,4BAA4B,GAChExU,KAAKuM,MAAMjI,KAAK,IAAIkP,GAAa,YAAa/H,EAAOsB,EAAUnN,KAAM6T,EAASW,IAC9ElP,EAAKlD,gBAAgB+K,EAAUnN,MAC/BkU,GAAaM,EAAiB5S,OAAS,EACvCqB,WAIP,GAAsB,IAAlBqC,EAAKoE,SAAqC,CAC/C,MAAMmL,EAAYvP,EAAKuP,UACjB7B,EAAU6B,EAAUJ,MAAMnB,IAChC,GAAIN,EAAQpR,OAAS,EAAG,CACpB,MAAM4H,EAASlE,EAAKyD,WACd+L,EAAY9B,EAAQpR,OAAS,EAEnCsS,GAAaY,EAIbxP,EAAKuH,YAAcmG,EAAQ8B,GAG3B,IAAK,IAAI7R,EAAI,EAAGA,EAAI6R,EAAW7R,IAC3BuG,EAAOmC,aAAavI,SAASyC,eAAemN,EAAQ/P,IAAKqC,GACzDlF,KAAKuM,MAAMjI,KAAK,IAAIkP,GAAa,OAAQ/H,UAG5C,CAGD,MAAMkJ,EAAkBzP,EAAKyP,gBACvBnJ,EAActG,EAAKsG,YACA,OAApBmJ,GAC4B,IAA7BA,EAAgBrL,UACC,OAAhBkC,GAC4B,IAAzBA,EAAYlC,UACK,KAArBmL,EAAUzP,SACV+O,EAAczP,KAAKY,GACnB+O,EAAcD,EACdvI,WAIP,GAAsB,IAAlBvG,EAAKoE,UACVpE,EAAKuP,YAAcpB,GAAmB,CACtC,MAAMjK,EAASlE,EAAKyD,WAIS,OAAzBzD,EAAKyP,iBACLzP,EAAKyP,kBAAoBX,EACzB5K,EAAOmC,aAAa,IAAIqJ,KAAQ1P,GAGhCuG,IAEJzL,KAAKuM,MAAMjI,KAAK,IAAIkP,GAAa,OAAQ/H,MACzCsI,EAAczP,KAAKY,GAIM,OAArBA,EAAKsG,YACLpC,EAAOmC,aAAa,IAAIqJ,KAAQ1P,GAGhCuG,IAEJwI,EAAcD,EACdF,KAIR,IAAK,MAAMe,KAAKd,EACZc,EAAElM,WAAWC,YAAYiM,GAMjCvS,SAASsQ,EAAS7B,GACd,MAAM+D,EAAIlC,EAAQpR,OACZuT,KACN,IAAIC,GAAgB,EACpB,IAAK,IAAInS,EAAI,EAAGA,EAAIiS,EAAI,EAAGjS,IAAK,CAC5B,MAAMvD,EAAIsT,EAAQ/P,GAClBkS,EAAEzQ,KAAKhF,GAIP0V,EAAuC,OAAvB1V,EAAEkV,MAAMrB,KACO,OAA1B7T,EAAEkV,MAAMpB,KAA0B4B,EACvCD,EAAEzQ,KAAK0Q,EAAgB1B,GAAaJ,IAExC6B,EAAEzQ,KAAKsO,EAAQkC,EAAI,IACnB,MAAMhO,EAAOiO,EAAEnN,KAAK,IACpB,OAAOmJ,UAAcjK,UAAeA,GAG5C,MAAamO,GAAW,CAACC,EAAM9U,KAGd,MAATA,IAA0C,IAAzBA,EAAM+U,iBACvB/U,EAAQA,EAAM8U,IAED,OAAV9U,OAAiB0S,EAAY1S,SAM3BgV,GACT9S,YAAY+S,EAAU3B,EAAS9T,EAAMgT,GACjC5S,KAAKqV,SAAWA,EAChBrV,KAAK0T,QAAUA,EACf1T,KAAKJ,KAAOA,EACZI,KAAK4S,QAAUA,EACf5S,KAAKsV,KAAO1C,EAAQpR,OAAS,EAEjCc,SAAS4B,EAAQqR,GACb,MAAM3C,EAAU5S,KAAK4S,QACrB,IAAIpN,EAAO,GACX,IAAK,IAAI3C,EAAI,EAAGA,EAAI+P,EAAQpR,OAAQqB,IAEhC,GADA2C,GAAQoN,EAAQ/P,GACZA,EAAI+P,EAAQpR,OAAS,EAAG,CACxB,MAAMgU,EAAIP,GAASjV,KAAMkE,EAAOqR,EAAa1S,IAC7C,GAAI2S,IACC3Q,MAAMD,QAAQ4Q,IAAmB,iBAANA,GAAkBA,EAAEC,OAAOC,WACvD,IAAK,MAAM/C,KAAK6C,EAEZhQ,GAAQmN,OAIZnN,GAAQgQ,EAIpBxV,KAAK0T,QAAQzS,aAAajB,KAAKJ,KAAM4F,UAGhCmQ,GACTrT,YAAY+S,EAAUO,EAAWC,GAC7B7V,KAAKqV,SAAWA,EAChBrV,KAAK4V,UAAYA,EACjB5V,KAAK6V,QAAUA,EACf7V,KAAK8V,oBAAiBhD,EAE1BxQ,SAASlC,GAEL,GAAc,QADdA,EAAQ6U,GAASjV,KAAMI,KAEA,iBAAVA,GAAuC,mBAAVA,EAAuB,CAG7D,GAAIA,IAAUJ,KAAK8V,eACf,OAEJ9V,KAAK+V,SAAS3V,QAETA,aAAiB4S,GACtBhT,KAAKgW,mBAAmB5V,GAEnByE,MAAMD,QAAQxE,IAAUA,EAAMqV,OAAOC,UAC1C1V,KAAKiW,aAAa7V,GAEbA,aAAiB8V,KACtBlW,KAAKmW,SAAS/V,QAEM0S,IAAf1S,EAAMsN,KACX1N,KAAKoW,YAAYhW,GAIjBJ,KAAK+V,SAAS3V,GAGtBkC,QAAQ4C,GACJlF,KAAK6V,QAAQlN,WAAW4C,aAAarG,EAAMlF,KAAK6V,SAEpDvT,SAASlC,GACLJ,KAAKqW,QACLrW,KAAKsW,QAAQlW,GACbJ,KAAK8V,eAAiB1V,EAE1BkC,SAASlC,GACL,MAAM8E,EAAOlF,KAAK4V,UAAUpK,YACxBtG,IAASlF,KAAK6V,QAAQlB,iBACtBzP,EAAKoE,WAAa4M,KAAKK,UAKvBrR,EAAKuH,YAAcrM,EAGnBJ,KAAKmW,SAASnT,SAASyC,oBAAyBqN,IAAV1S,EAAsB,GAAKA,IAErEJ,KAAK8V,eAAiB1V,EAE1BkC,mBAAmBlC,GACf,IAAIiV,EACArV,KAAK8V,gBACL9V,KAAK8V,eAAezO,WAAajH,EAAMiH,SACvCgO,EAAWrV,KAAK8V,gBAGhBT,EACI,IAAImB,GAAiBpW,EAAMiH,SAAUrH,KAAKqV,SAASoB,eACvDzW,KAAKmW,SAASd,EAASqB,UACvB1W,KAAK8V,eAAiBT,GAE1BA,EAAS3L,OAAOtJ,EAAM8D,QAE1B5B,aAAalC,GAUJyE,MAAMD,QAAQ5E,KAAK8V,kBACpB9V,KAAKqW,QACLrW,KAAK8V,mBAIT,MAAMa,EAAY3W,KAAK8V,eACvB,IAAIhC,EAAY,EAChB,IAAK,MAAM5H,KAAQ9L,EAAO,CAEtB,IAAIwW,EAAWD,EAAU7C,GAEzB,QAAiBhB,IAAb8D,EAAwB,CAGxB,IAAIC,EAAY7W,KAAK4V,UAGrB,GAAI9B,EAAY,EAEZ+C,EADqBF,EAAU7C,EAAY,GAClB+B,QAAU7S,SAASyC,eAAe,IAC3DzF,KAAKsW,QAAQO,GAEjBD,EAAW,IAAIjB,GAAS3V,KAAKqV,SAAUwB,EAAW7W,KAAK6V,SACvDc,EAAUrS,KAAKsS,GAEnBA,EAASE,SAAS5K,GAClB4H,IAEJ,GAAkB,IAAdA,EACA9T,KAAKqW,QACLrW,KAAK8V,oBAAiBhD,OAErB,GAAIgB,EAAY6C,EAAUnV,OAAQ,CACnC,MAAMuV,EAAWJ,EAAU7C,EAAY,GAEvC6C,EAAUnV,OAASsS,EACnB9T,KAAKqW,MAAMU,EAASlB,QAAQlB,iBAC5BoC,EAASlB,QAAU7V,KAAK6V,SAGhCvT,YAAYlC,GACRA,EAAMsN,KAAM8H,IACJxV,KAAK8V,iBAAmB1V,GACxBJ,KAAK8W,SAAStB,KAGtBxV,KAAK8V,eAAiB1V,EAE1BkC,MAAMsT,EAAY5V,KAAK4V,WACnB,IAAI1Q,EACJ,MAAQA,EAAO0Q,EAAUpK,eAAiBxL,KAAK6V,SAC3C3Q,EAAKyD,WAAWC,YAAY1D,IAIxC,MAAa8R,GAAsB,CAAC3B,EAAU4B,EAAc/R,KACxD,GAA0B,cAAtB+R,EAAa9U,KACb,OAAO,IAAIiT,GAAcC,EAAUnQ,EAAM+R,EAAarX,KAAMqX,EAAarE,SAExE,GAA0B,SAAtBqE,EAAa9U,KAClB,OAAO,IAAIwT,GAASN,EAAUnQ,EAAMA,EAAKsG,aAE7C,MAAM,IAAI0L,2BAA2BD,EAAa9U,eAMzCqU,GACTlU,YAAY+E,EAAU8P,EAAeH,IACjChX,KAAKoX,UACLpX,KAAKqH,SAAWA,EAChBrH,KAAKyW,cAAgBU,EAEzB7U,OAAO4B,GACH,IAAImT,EAAa,EACjB,IAAK,MAAMnC,KAAQlV,KAAKoX,YACFtE,IAAdoC,EAAKI,MACLJ,EAAK4B,SAAS5S,EAAOmT,IACrBA,MAGAnC,EAAK4B,SAAS5S,EAAQmT,GACtBA,GAAcnC,EAAKI,MAI/BhT,SACI,MAAMgD,EAAWtC,SAASkE,WAAWlH,KAAKqH,SAASqM,QAAQ3L,SAAS,GACpE,GAAI/H,KAAKqH,SAASkF,MAAM/K,OAAS,EAAG,CAGhC,MAAMoS,EAAS5Q,SAAS6Q,iBAAiBvO,EAAU,IAAoF,MAAM,GACvIiH,EAAQvM,KAAKqH,SAASkF,MAC5B,IAAId,EAAQ,EACRqI,EAAY,EACZmD,EAAe1K,EAAM,GACrBrH,EAAO0O,EAAOM,WAClB,KAAe,MAARhP,GAAgB4O,EAAYvH,EAAM/K,QACjCiK,IAAUwL,EAAaxL,OACvBzL,KAAKoX,OAAO9S,KAAKtE,KAAKyW,cAAczW,KAAMiX,EAAc/R,IACxD+R,EAAe1K,IAAQuH,KAGvBrI,IACAvG,EAAO0O,EAAOM,YAI1B,GAAIlU,KAAKqH,SAAS0J,IAAK,CACnB,MAAMuG,EAAahS,EAAS6C,WAC5B7C,EAASsD,YAAY0O,GACrB,MAAM7I,EAAQ6I,EAAWtR,WACzB,IAAK,IAAInD,EAAI,EAAGA,EAAI4L,EAAMjN,OAAQqB,IAC9ByC,EAASO,YAAY4I,EAAMvC,KAAKrJ,IAGxC,OAAOyC,GC1cf,SAAgB8G,GAAOmL,EAAQ1P,IDqB/B,SAAuB0P,EAAQ1P,EAAWsP,EAAeH,IACrD,IAAI3B,EAAWxN,EAAU2P,mBAEzB,QAAiB1E,IAAbuC,GAA0BA,EAAShO,WAAakQ,EAAOlQ,UACvDgO,EAASoB,gBAAkBU,EAE3B,YADA9B,EAAS3L,OAAO6N,EAAOrT,QAI3BmR,EAAW,IAAImB,GAAiBe,EAAOlQ,SAAU8P,GACjDtP,EAAU2P,mBAAqBnC,EAC/B,MAAM/P,EAAW+P,EAASqB,SAE1B,IAAIlK,EACJ,IAFA6I,EAAS3L,OAAO6N,EAAOrT,QAEfsI,EAAQ3E,EAAU4P,WACtB5P,EAAUe,YAAY4D,GAE1B3E,EAAUhC,YAAYP,GCrCtBoS,CAAWH,EAAQ1P,EAAW8P,IAElC,MAAaA,GAAuB,CAACtC,EAAU4B,EAAc/R,KACzD,GAA0B,cAAtB+R,EAAa9U,KAAsB,CACnC,GAAI8U,EAAaxD,QAAQmE,WAAW,OAEhC,OAAO,UAiCftV,YAAY+S,EAAU3B,EAASmE,GAC3B7X,KAAKqV,SAAWA,EAChBrV,KAAK0T,QAAUA,EACf1T,KAAK6X,UAAYA,EAErBvV,SAASlC,GACL,MAAM0X,EAAW7C,GAASjV,KAAMI,GAC5B0X,IAAa9X,KAAK+X,YAGN,MAAZD,EACA9X,KAAK0T,QAAQjE,oBAAoBzP,KAAK6X,UAAW7X,MAE1B,MAAlBA,KAAK+X,WACV/X,KAAK0T,QAAQpE,iBAAiBtP,KAAK6X,UAAW7X,MAElDA,KAAK+X,UAAYD,GAErBxV,YAAYoM,GACsB,mBAAnB1O,KAAK+X,UACZ/X,KAAK+X,UAAUxV,KAAKvC,KAAK0T,QAAShF,GAES,mBAA/B1O,KAAK+X,UAAUnH,aAC3B5Q,KAAK+X,UAAUnH,YAAYlC,KAxDN2G,EAAUnQ,EADb+R,EAAaxD,QAAQc,UAAU,IAGrD,GAAI0C,EAAarX,KAAKoY,SAAS,KAAM,CACjC,MAAMpY,EAAOqX,EAAarX,KAAK2U,UAAU,EAAG0C,EAAarX,KAAK4B,OAAS,GACvE,OAAO,IAAI4T,GAAcC,EAAUnQ,EAAMtF,EAAMqX,EAAarE,SAEhE,OAAO,kBAImBwC,GAC9B9S,SAAS4B,EAAQqR,GACb,MAAMjW,EAAIU,KAAK4S,QACf,IAAIxS,EACJ,GAAiB,IAAbd,EAAEkC,QAAyB,KAATlC,EAAE,IAAiC,KAApBA,EAAEA,EAAEkC,OAAS,GAG9CpB,EAAQ6U,GAASjV,KAAMkE,EAAOqR,QAE7B,CAEDnV,EAAQ,GACR,IAAK,IAAIyC,EAAI,EAAGA,EAAIvD,EAAEkC,OAAQqB,IAC1BzC,GAASd,EAAEuD,GACPA,EAAIvD,EAAEkC,OAAS,IACfpB,GAAS6U,GAASjV,KAAMkE,EAAOqR,EAAa1S,KAIxD7C,KAAK0T,QAAQ1T,KAAKJ,MAAQQ,IAvBFiV,EAAUnQ,EAAM+R,EAAaxD,QAASwD,EAAarE,SAE/E,OAAOoE,GAAoB3B,EAAU4B,EAAc/R,QCzCjD+S,8HAAqC7G,2DAE5B,kBAAa8G,GAASpR,2BAAe2L,EAAKpB,iDAGjCvK,YCpBpBqR,GAA8B,iBAAVC,QAAsBA,QAAUA,OAAOtY,SAAWA,QAAUsY,OCEhFC,GAA0B,iBAARC,MAAoBA,MAAQA,KAAKxY,SAAWA,QAAUwY,KCAxE7C,IDGO0C,IAAcE,IAAYE,SAAS,cAATA,ICHnB9C,OCAd+C,GAAc1Y,OAAOyI,UAGrB7F,GAAiB8V,GAAY9V,eAO7B+V,GAAuBD,GAAY1T,SAGnC4T,GAAiBjD,GAASA,GAAOkD,iBAAc7F,ECfnD,IAOI2F,GAPc3Y,OAAOyI,UAOczD,SCHvC,IAAI8T,GAAU,gBACVC,GAAe,qBAGfH,GAAiBjD,GAASA,GAAOkD,iBAAc7F,EASnD,SAASgG,GAAW1Y,GAClB,OAAa,MAATA,OACe0S,IAAV1S,EAAsByY,GAAeD,GAEtCF,IAAkBA,MAAkB5Y,OAAOM,GFGrD,SAAmBA,GACjB,IAAI2Y,EAAQrW,GAAeH,KAAKnC,EAAOsY,IACnCM,EAAM5Y,EAAMsY,IAEhB,IACEtY,EAAMsY,SAAkB5F,EACxB,IAAImG,GAAW,EACf,MAAOtY,IAET,IAAI4W,EAASkB,GAAqBlW,KAAKnC,GAQvC,OAPI6Y,IACEF,EACF3Y,EAAMsY,IAAkBM,SAEjB5Y,EAAMsY,KAGVnB,EEnBH2B,CAAU9Y,IDNQA,ECOHA,EDNZqY,GAAqBlW,KAAKnC,IADnC,IAAwBA,EEdxB,ICKiB+Y,GAAMC,GDLnBC,ICKaF,GDLUrZ,OAAOC,eCKXqZ,GDL2BtZ,OCMzC,SAASwZ,GACd,OAAOH,GAAKC,GAAUE,MCL1B,IAAIC,GAAY,kBAGZC,GAAYjB,SAAShQ,UACrBiQ,GAAc1Y,OAAOyI,UAGrBkR,GAAeD,GAAU1U,SAGzBpC,GAAiB8V,GAAY9V,eAG7BgX,GAAmBD,GAAalX,KAAKzC,QA8BzC,SAAS6Z,GAAcvZ,GACrB,GCxBgB,OADIA,EDyBFA,ICxBsB,iBAATA,GDwBH0Y,GAAW1Y,IAAUmZ,GAC/C,OAAO,EC1BX,IAAsBnZ,ED4BhBwZ,EAAQP,GAAajZ,GACzB,GAAc,OAAVwZ,EACF,OAAO,EAET,IAAIC,EAAOnX,GAAeH,KAAKqX,EAAO,gBAAkBA,EAAMzN,YAC9D,MAAsB,mBAAR0N,GAAsBA,aAAgBA,GAClDJ,GAAalX,KAAKsX,IAASH,0SE1D/B5Z,OAEOI,eAAe4Z,EAAS,cAC9B1Z,OAAO,IAER0Z,EAAiB,QACjB,SAAkClK,GACjC,IAAI2H,EACAwC,EAAUnK,EAAK6F,OAEI,mBAAZsE,EACNA,EAAQC,WACXzC,EAASwC,EAAQC,YAEjBzC,EAASwC,EAAQ,cACjBA,EAAQC,WAAazC,GAGtBA,EAAS,eAGV,OAAOA,oCCrBRzX,OAEOI,eAAe4Z,EAAS,cAC7B1Z,OAAO,IAKT,IAEgCgE,EAE5BwL,EAJAqK,GAE4B7V,EAFQ8V,KAEa9V,EAAI+V,WAAa/V,GAAQgW,QAAWhW,GAMvFwL,EADkB,oBAAT0I,KACFA,KACoB,oBAAX+B,OACTA,YACoB,IAAXjC,GACTA,GAEAkC,EAKT,IAAI/C,GAAS,EAAI0C,EAAoB,SAAGrK,GACxCkK,EAAiB,QAAIvC,WC5BrB,OAAiBgD,GCSNC,IACTC,KAAM,gBA2BS,SAASC,GAAYC,EAASC,EAAgBC,GAC7D,IAAIC,EAOJ,GAL8B,mBAAnBF,QAAqD,IAAbC,IACjDA,EAAWD,EACXA,OAAiB9H,QAGK,IAAb+H,EAA0B,CACnC,GAAwB,mBAAbA,EACT,MAAM,IAAI3D,MAAM,2CAGlB,OAAO2D,EAASH,GAATG,CAAsBF,EAASC,GAGxC,GAAuB,mBAAZD,EACT,MAAM,IAAIzD,MAAM,0CAGlB,IAAI6D,EAAiBJ,EACjBK,EAAeJ,EACfK,KACAC,EAAgBD,EAChBE,GAAgB,EAEpB,SAASC,IACHF,IAAkBD,IACpBC,EAAgBD,EAAiB9T,SASrC,SAASkU,IACP,OAAOL,EA0BT,SAASM,EAAUxD,GACjB,GAAwB,mBAAbA,EACT,MAAM,IAAIZ,MAAM,uCAGlB,IAAIqE,GAAe,EAKnB,OAHAH,IACAF,EAAc5W,KAAKwT,GAEZ,WACL,GAAKyD,EAAL,CAIAA,GAAe,EAEfH,IACA,IAAI3P,EAAQyP,EAAc7W,QAAQyT,GAClCoD,EAAcM,OAAO/P,EAAO,KA6BhC,SAASgQ,EAASC,GAChB,IAAK/B,GAAc+B,GACjB,MAAM,IAAIxE,MAAM,2EAGlB,QAA2B,IAAhBwE,EAAOvZ,KAChB,MAAM,IAAI+U,MAAM,sFAGlB,GAAIiE,EACF,MAAM,IAAIjE,MAAM,sCAGlB,IACEiE,GAAgB,EAChBH,EAAeD,EAAeC,EAAcU,WAE5CP,GAAgB,EAIlB,IADA,IAAIQ,EAAYV,EAAmBC,EAC1BrY,EAAI,EAAGA,EAAI8Y,EAAUna,OAAQqB,IAAK,EAEzCiV,EADe6D,EAAU9Y,MAI3B,OAAO6Y,EAkET,OAFAD,GAAWtZ,KAAMqY,GAAYC,QAEtBK,GACLW,SAAUA,EACVH,UAAWA,EACXD,SAAUA,EACVO,eAzDF,SAAwBC,GACtB,GAA2B,mBAAhBA,EACT,MAAM,IAAI3E,MAAM,8CAGlB6D,EAAiBc,EACjBJ,GAAWtZ,KAAMqY,GAAYC,UAoDtBqB,IA3CT,WACE,IAAIC,EAEAC,EAAiBV,EACrB,OAAOS,GASLT,UAAW,SAAmBW,GAC5B,GAAwB,iBAAbA,EACT,MAAM,IAAIC,UAAU,0CAGtB,SAASC,IACHF,EAASG,MACXH,EAASG,KAAKf,KAMlB,OAFAc,KAESE,YADSL,EAAeG,OAG7BL,IAAgB,WACtB,OAAO9b,MACN+b,GAagCjB,EChPvC,SAAwBwB,GAAQC,GAEP,oBAAZC,SAAoD,mBAAlBA,QAAQ5b,OACnD4b,QAAQ5b,MAAM2b,GAGhB,IAIE,MAAM,IAAIrF,MAAMqF,GAEhB,MAAO5b,KCkDX,SAAwB8b,GAAgBC,GAGtC,IAFA,IAAIC,EAAc7c,OAAOsB,KAAKsb,GAC1BE,KACK/Z,EAAI,EAAGA,EAAI8Z,EAAYnb,OAAQqB,IAAK,CAC3C,IAAIC,EAAM6Z,EAAY9Z,GAEO,eAAzBga,QAAQC,IAAIC,eACe,IAAlBL,EAAS5Z,IAClBwZ,GAAQ,gCAAkCxZ,EAAM,KAIvB,mBAAlB4Z,EAAS5Z,KAClB8Z,EAAc9Z,GAAO4Z,EAAS5Z,IAGlC,IAAIka,EAAmBld,OAAOsB,KAAKwb,GAE/BK,OAAqB,EACI,eAAzBJ,QAAQC,IAAIC,WACdE,MAGF,IAvD0BP,EAuDtBQ,OAAsB,EAC1B,IAxD0BR,EAyDLE,EAxDrB9c,OAAOsB,KAAKsb,GAAUrb,QAAQ,SAAUyB,GACtC,IAAI6X,EAAU+B,EAAS5Z,GAGvB,QAA4B,IAFT6X,OAAQ7H,GAAa3Q,KAAMqY,GAAYC,OAGxD,MAAM,IAAIvD,MAAM,YAAcpU,EAAM,iRAItC,QAAkD,IAAvC6X,OAAQ7H,GAAa3Q,KADrB,gCAAkCsB,KAAKC,SAASoB,SAAS,IAAIyP,UAAU,GAAGF,MAAM,IAAIzM,KAAK,OAElG,MAAM,IAAIsP,MAAM,YAAcpU,EAAM,6EAAqF0X,GAAYC,KAAO,iTA+C9I,MAAO9Z,GACPuc,EAAsBvc,EAGxB,OAAO,WACL,IAAIqQ,EAAQf,UAAUzO,OAAS,QAAsBsR,IAAjB7C,UAAU,GAAmBA,UAAU,MACvEyL,EAASzL,UAAU,GAEvB,GAAIiN,EACF,MAAMA,EAGR,GAA6B,eAAzBL,QAAQC,IAAIC,SAA2B,CACzC,IAAII,EAhGV,SAA+CC,EAAYV,EAAUhB,EAAQuB,GAC3E,IAAIN,EAAc7c,OAAOsB,KAAKsb,GAC1BW,EAAe3B,GAAUA,EAAOvZ,OAASqY,GAAYC,KAAO,gDAAkD,yCAElH,GAA2B,IAAvBkC,EAAYnb,OACd,MAAO,gIAGT,IAAKmY,GAAcyD,GACjB,MAAO,OAASC,EAAe,+BAAiCvY,SAASvC,KAAK6a,GAAY5I,MAAM,kBAAkB,GAAK,kEAA0EmI,EAAY/U,KAAK,QAAU,IAG9N,IAAI0V,EAAiBxd,OAAOsB,KAAKgc,GAAYG,OAAO,SAAUza,GAC5D,OAAQ4Z,EAASha,eAAeI,KAASma,EAAmBna,KAO9D,OAJAwa,EAAejc,QAAQ,SAAUyB,GAC/Bma,EAAmBna,IAAO,IAGxBwa,EAAe9b,OAAS,EACnB,eAAiB8b,EAAe9b,OAAS,EAAI,OAAS,OAAS,KAAa8b,EAAe1V,KAAK,QAAU,cAAgByV,EAAe,8DAA4EV,EAAY/U,KAAK,QAAU,2CADzP,EA4EyB4V,CAAsCxM,EAAO4L,EAAelB,EAAQuB,GACrFE,GACFb,GAAQa,GAMZ,IAFA,IA7GmCra,EAAK4Y,EACtC+B,EA4GEC,GAAa,EACbC,KACKC,EAAK,EAAGA,EAAKZ,EAAiBxb,OAAQoc,IAAM,CACnD,IAAIC,EAAOb,EAAiBY,GACxBjD,EAAUiC,EAAciB,GACxBC,EAAsB9M,EAAM6M,GAC5BE,EAAkBpD,EAAQmD,EAAqBpC,GACnD,QAA+B,IAApBqC,EAAiC,CAC1C,IAAIC,GArH2Blb,EAqHkB+a,EApHnDJ,OAAAA,EAGG,kBAHHA,GADsC/B,EAqHmBA,IApHlCA,EAAOvZ,OACH,IAAMsb,EAAW3Y,WAAa,KAAO,aAE9B,cAAgBhC,EAAM,kLAkHtD,MAAM,IAAIoU,MAAM8G,GAElBL,EAAUE,GAAQE,EAClBL,EAAaA,GAAcK,IAAoBD,EAEjD,OAAOJ,EAAaC,EAAY3M,GC/HpC,SAASiN,GAAkBC,EAAezC,GACxC,OAAO,WACL,OAAOA,EAASyC,EAAc/X,WAAM2M,EAAW7C,aCSnD,SAAwBkO,KACtB,IAAK,IAAIC,EAAOnO,UAAUzO,OAAQ6c,EAAQxZ,MAAMuZ,GAAOP,EAAO,EAAGA,EAAOO,EAAMP,IAC5EQ,EAAMR,GAAQ5N,UAAU4N,GAG1B,OAAqB,IAAjBQ,EAAM7c,OACD,SAAU8X,GACf,OAAOA,GAIU,IAAjB+E,EAAM7c,OACD6c,EAAM,GAGRA,EAAMC,OAAO,SAAUvJ,EAAGwJ,GAC/B,OAAO,WACL,OAAOxJ,EAAEwJ,EAAEpY,WAAM2M,EAAW7C,eC5BlC,IAAIuO,GAAW1e,OAAO2e,QAAU,SAAUlP,GAAU,IAAK,IAAI1M,EAAI,EAAGA,EAAIoN,UAAUzO,OAAQqB,IAAK,CAAE,IAAIsO,EAASlB,UAAUpN,GAAI,IAAK,IAAIC,KAAOqO,EAAcrR,OAAOyI,UAAU7F,eAAeH,KAAK4O,EAAQrO,KAAQyM,EAAOzM,GAAOqO,EAAOrO,IAAY,OAAOyM,GCWvP,SAASmP,MAEoB,eAAzB7B,QAAQC,IAAIC,UAAuD,iBAAnB2B,GAAU9e,MAAwC,cAAnB8e,GAAU9e,MAC3F0c,GAAQ,0bHaV,SAA2CqC,EAAgBlD,GACzD,GAA8B,mBAAnBkD,EACT,OAAOV,GAAkBU,EAAgBlD,GAG3C,GAA8B,iBAAnBkD,GAAkD,OAAnBA,EACxC,MAAM,IAAIzH,MAAM,0EAA+F,OAAnByH,EAA0B,cAAgBA,GAAkB,8FAK1J,IAFA,IAAIvd,EAAOtB,OAAOsB,KAAKud,GACnBC,KACK/b,EAAI,EAAGA,EAAIzB,EAAKI,OAAQqB,IAAK,CACpC,IAAIC,EAAM1B,EAAKyB,GACXqb,EAAgBS,EAAe7b,GACN,mBAAlBob,IACTU,EAAoB9b,GAAOmb,GAAkBC,EAAezC,IAGhE,OAAOmD,mBEzBT,WACE,IAAK,IAAIR,EAAOnO,UAAUzO,OAAQqd,EAAcha,MAAMuZ,GAAOP,EAAO,EAAGA,EAAOO,EAAMP,IAClFgB,EAAYhB,GAAQ5N,UAAU4N,GAGhC,OAAO,SAAUnD,GACf,OAAO,SAAUC,EAASC,EAAgBC,GACxC,IAEIiE,EAFAC,EAAQrE,EAAYC,EAASC,EAAgBC,GAC7CmE,EAAYD,EAAMtD,SAGlBwD,GACF5D,SAAU0D,EAAM1D,SAChBI,SAAU,SAAkBC,GAC1B,OAAOsD,EAAUtD,KAQrB,OALAoD,EAAQD,EAAYK,IAAI,SAAUC,GAChC,OAAOA,EAAWF,KAEpBD,EAAYb,GAAQhY,WAAM2M,EAAWgM,EAAzBX,CAAgCY,EAAMtD,UAE3C+C,MAAaO,GAClBtD,SAAUuD,wCE3ClB,IAEIb,EAAU5D,GAAiB4D,QAE/BrE,cAAqB,EACrBA,sBACoB,oBAAXO,QAA0BA,OAAO+E,qCACtC/E,OAAO+E,qCACP,WACE,GAAyB,IAArBnP,UAAUzO,OACd,MAA4B,iBAAjByO,UAAU,GAAwBkO,EACtCA,EAAQhY,MAAM,KAAM8J,YAIjC6J,mBACoB,oBAAXO,QAA0BA,OAAOgF,6BACtChF,OAAOgF,6BACP,WAAa,OAAO,SAASC,GAAQ,OAAOA,+DCWhD,SAAgBC,GAAQ1H,EAAWtI,EAAQiQ,GACvC,MAAMC,EAAiBD,EAAoC,IAAIE,YAAY7H,GAAa8H,OAAQH,QAA5D,IAAI3b,MAAMgU,GAC9CtI,EAAOX,cAAc6Q,GC1BzB,IAAMG,MAEAC,8HAAkBC,mDAQXC,YAAc,kFACdC,UAAc,kBACdC,sBAEAC,eAAqBlgB,KAAKkgB,eAAeze,KAAKzB,WAC9CmgB,cAAqBngB,KAAKmgB,cAAc1e,KAAKzB,WAC7CogB,mBAAqBpgB,KAAKogB,mBAAmB3e,KAAKzB,WAElDqgB,qBAGAC,mBAGGN,EAA8BhgB,KAA9BggB,UAAWE,EAAmBlgB,KAAnBkgB,eAEdN,GAAOI,UAEP3D,YAAcuD,GAAOI,GAAWjB,MAAMzD,UAAU4E,8CAI7C,aAAclgB,MAAQ+e,MAAO/e,KAAKugB,yDAIlC,cAAevgB,MAAQgR,MAAOhR,KAAKqb,yDAGjCmF,4DACFR,EAA6BhgB,KAA7BggB,UAAWG,EAAkBngB,KAAlBmgB,cAEfP,GAAOI,QAEJA,UACItF,GAAYyF,IAAiBK,EAAcC,UAI/CT,GAAWjB,WACXa,GAAOI,GAAWjB,0BACD/e,KAAKogB,kEAInBH,4DACFF,EAAgB/f,KAAhB+f,mBACDtD,MAAkBsD,eAAgBE,+CAG1BS,EAAc9gB,EAAM+gB,QAC9BV,cAAcrgB,GAAQ+gB,IACd/E,eAAe5b,KAAKmgB,cAAcngB,KAAKigB,0DAI7CL,GAAO5f,KAAKggB,WAAWjB,MAAM1D,qDAI7BuE,GAAO5f,KAAKggB,WAAWjB,0DAKzB1C,oFAtEgBK,gDACd,SAACkE,EAAKC,UAAQnE,EAAS4B,OAAO,SAACwC,EAAGC,UAAMA,EAAED,EAAGD,IAAMD,sCAHnChhB,KAAM,uBA4ErCya,OAAO2G,eAAeC,OAAOpB,GAAUqB,GAAGthB,KAAMigB,+JCpFjC,SAAUsB,OACfC,EAAS,IAAIlK,MAAMiK,UAElB,SAACxgB,WACG0gB,cAAgB1gB,EACjBygB"}